(()=>{"use strict";var t=1e-6,e="undefined"!=typeof Float32Array?Float32Array:Array;function i(){var t=new e(16);return e!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function s(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function o(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function n(t,e){var i=e[0],s=e[1],o=e[2],n=e[3],r=e[4],a=e[5],h=e[6],c=e[7],l=e[8],g=e[9],m=e[10],d=e[11],u=e[12],f=e[13],p=e[14],_=e[15],w=i*a-s*r,v=i*h-o*r,x=i*c-n*r,b=s*h-o*a,E=s*c-n*a,M=o*c-n*h,T=l*f-g*u,A=l*p-m*u,y=l*_-d*u,P=g*p-m*f,C=g*_-d*f,S=m*_-d*p,L=w*S-v*C+x*P+b*y-E*A+M*T;return L?(L=1/L,t[0]=(a*S-h*C+c*P)*L,t[1]=(o*C-s*S-n*P)*L,t[2]=(f*M-p*E+_*b)*L,t[3]=(m*E-g*M-d*b)*L,t[4]=(h*y-r*S-c*A)*L,t[5]=(i*S-o*y+n*A)*L,t[6]=(p*x-u*M-_*v)*L,t[7]=(l*M-m*x+d*v)*L,t[8]=(r*C-a*y+c*T)*L,t[9]=(s*y-i*C-n*T)*L,t[10]=(u*E-f*x+_*w)*L,t[11]=(g*x-l*E-d*w)*L,t[12]=(a*A-r*P-h*T)*L,t[13]=(i*P-s*A+o*T)*L,t[14]=(f*v-u*b-p*w)*L,t[15]=(l*b-g*v+m*w)*L,t):null}function r(t,e,i){var s=e[0],o=e[1],n=e[2],r=e[3],a=e[4],h=e[5],c=e[6],l=e[7],g=e[8],m=e[9],d=e[10],u=e[11],f=e[12],p=e[13],_=e[14],w=e[15],v=i[0],x=i[1],b=i[2],E=i[3];return t[0]=v*s+x*a+b*g+E*f,t[1]=v*o+x*h+b*m+E*p,t[2]=v*n+x*c+b*d+E*_,t[3]=v*r+x*l+b*u+E*w,v=i[4],x=i[5],b=i[6],E=i[7],t[4]=v*s+x*a+b*g+E*f,t[5]=v*o+x*h+b*m+E*p,t[6]=v*n+x*c+b*d+E*_,t[7]=v*r+x*l+b*u+E*w,v=i[8],x=i[9],b=i[10],E=i[11],t[8]=v*s+x*a+b*g+E*f,t[9]=v*o+x*h+b*m+E*p,t[10]=v*n+x*c+b*d+E*_,t[11]=v*r+x*l+b*u+E*w,v=i[12],x=i[13],b=i[14],E=i[15],t[12]=v*s+x*a+b*g+E*f,t[13]=v*o+x*h+b*m+E*p,t[14]=v*n+x*c+b*d+E*_,t[15]=v*r+x*l+b*u+E*w,t}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});var a;class h{static createShader(t,e,i){const s=t.createShader(e);if(t.shaderSource(s,i),t.compileShader(s),!t.getShaderParameter(s,t.COMPILE_STATUS)){const e=t.getShaderInfoLog(s);throw new Error("Shader compilation error: "+e)}return s}static createProgram(t,e,i){const s=t.createProgram();if(t.attachShader(s,e),t.attachShader(s,i),t.linkProgram(s),!t.getProgramParameter(s,t.LINK_STATUS)){const e=t.getProgramInfoLog(s);throw new Error("Could not compile WebGL program:"+e)}return s}static createBuffer(t,e,i){if(0==i.length)return null;if(!(i&&i.buffer instanceof ArrayBuffer&&void 0!==i.byteLength))return console.warn("Data is not an instance of ArrayBuffer"),null;const s=t.createBuffer();return t.bindBuffer(e,s),t.bufferData(e,i,t.STATIC_DRAW),s}static createVAO(t,...e){if(!(t instanceof WebGL2RenderingContext))return;const i=t.createVertexArray();let s,o;t.bindVertexArray(i);for(let i of e)null!=i.loc&&null!=i.loc&&(t.enableVertexAttribArray(i.loc),s=i.dimension,o=t.FLOAT,t.bindBuffer(t.ARRAY_BUFFER,i.buffer),t.vertexAttribPointer(i.loc,s,o,!1,0,0));return i}}class c{_gl;position=[0,0,0];rotation=[0,0,0];scale=[1,1,1];static#t=0;#e=i();#i=[];#s=null;#o=null;_program=null;_primitive;#n;_vaoLoc;#r;#a;#h=!1;useDepthTest=!1;get modelMatrix(){return this.updateModelMatrix(),this.#e}addAttribute(t,e,i=4){if(!(e instanceof Array))throw new Error("The info parameter needs to be a Array.");e.forEach((t=>{if("number"!=typeof t)throw new Error("The info array need to be numeric.")}));const s=e.length/i;if(this.#n){if(s!==this.#n)throw new Error("The VBOs need to contain the same number of vertex.")}else this.#n=s;const o=new Float32Array(e);this.#i.push({loc:this._gl.getAttribLocation(this._program,t),buffer:h.createBuffer(this._gl,this._gl.ARRAY_BUFFER,o),dimension:i}),this.#h=!1}constructor(t,e,i,s){this._primitive=s,this._gl=t,this.#c(e,i)}#c(t,e){this.#s=h.createShader(this._gl,this._gl.VERTEX_SHADER,t),this.#o=h.createShader(this._gl,this._gl.FRAGMENT_SHADER,e),this._program=h.createProgram(this._gl,this.#s,this.#o),this._gl.useProgram(this._program)}#l(){this._vaoLoc=h.createVAO(this._gl,...this.#i)}updateModelMatrix(){var t,e,i,s,n,r,a,h,c,l,g,m,d,u,f,p,_,w;o(this.#e),t=this.#e,e=this.#e,p=(i=this.position)[0],_=i[1],w=i[2],e===t?(t[12]=e[0]*p+e[4]*_+e[8]*w+e[12],t[13]=e[1]*p+e[5]*_+e[9]*w+e[13],t[14]=e[2]*p+e[6]*_+e[10]*w+e[14],t[15]=e[3]*p+e[7]*_+e[11]*w+e[15]):(s=e[0],n=e[1],r=e[2],a=e[3],h=e[4],c=e[5],l=e[6],g=e[7],m=e[8],d=e[9],u=e[10],f=e[11],t[0]=s,t[1]=n,t[2]=r,t[3]=a,t[4]=h,t[5]=c,t[6]=l,t[7]=g,t[8]=m,t[9]=d,t[10]=u,t[11]=f,t[12]=s*p+h*_+m*w+e[12],t[13]=n*p+c*_+d*w+e[13],t[14]=r*p+l*_+u*w+e[14],t[15]=a*p+g*_+f*w+e[15]),function(t,e,i){var s=Math.sin(i),o=Math.cos(i),n=e[4],r=e[5],a=e[6],h=e[7],c=e[8],l=e[9],g=e[10],m=e[11];e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[4]=n*o+c*s,t[5]=r*o+l*s,t[6]=a*o+g*s,t[7]=h*o+m*s,t[8]=c*o-n*s,t[9]=l*o-r*s,t[10]=g*o-a*s,t[11]=m*o-h*s}(this.#e,this.#e,this.rotation[0]),function(t,e,i){var s=Math.sin(i),o=Math.cos(i),n=e[0],r=e[1],a=e[2],h=e[3],c=e[8],l=e[9],g=e[10],m=e[11];e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=n*o-c*s,t[1]=r*o-l*s,t[2]=a*o-g*s,t[3]=h*o-m*s,t[8]=n*s+c*o,t[9]=r*s+l*o,t[10]=a*s+g*o,t[11]=h*s+m*o}(this.#e,this.#e,this.rotation[1]),function(t,e,i){var s=Math.sin(i),o=Math.cos(i),n=e[0],r=e[1],a=e[2],h=e[3],c=e[4],l=e[5],g=e[6],m=e[7];e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=n*o+c*s,t[1]=r*o+l*s,t[2]=a*o+g*s,t[3]=h*o+m*s,t[4]=c*o-n*s,t[5]=l*o-r*s,t[6]=g*o-a*s,t[7]=m*o-h*s}(this.#e,this.#e,this.rotation[2]),function(t,e,i){var s=i[0],o=i[1],n=i[2];t[0]=e[0]*s,t[1]=e[1]*s,t[2]=e[2]*s,t[3]=e[3]*s,t[4]=e[4]*o,t[5]=e[5]*o,t[6]=e[6]*o,t[7]=e[7]*o,t[8]=e[8]*n,t[9]=e[9]*n,t[10]=e[10]*n,t[11]=e[11]*n,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]}(this.#e,this.#e,this.scale)}loadMVP(t){const e=this._gl.getUniformLocation(this._program,"model"),o=this._gl.getUniformLocation(this._program,"modelView"),n=this._gl.getUniformLocation(this._program,"mvp"),a=this._gl.getUniformLocation(this._program,"view"),h=this._gl.getUniformLocation(this._program,"viewProjection"),c=this._gl.getUniformLocation(this._program,"projection");if(e)this._gl.uniformMatrix4fv(e,!1,this.#e);else if(o){const e=i();t?r(e,t.viewMatrix,this.#e):s(e,this.#e),this._gl.uniformMatrix4fv(o,!1,e)}else if(n){const e=i();t?r(e,t.viewProjection,this.#e):s(e,this.#e),this._gl.uniformMatrix4fv(n,!1,e)}a&&this._gl.uniformMatrix4fv(e,!1,t.viewMatrix),c&&this._gl.uniformMatrix4fv(e,!1,t.projMatrix),h&&this._gl.uniformMatrix4fv(e,!1,t.viewProjection)}createTex(t,e){return this.#r=this._gl.getUniformLocation(this._program,e),this.#a=this._gl.createTexture(),this._gl.activeTexture(this._gl[`TEXTURE${c.#t}`]),this._gl.bindTexture(this._gl.TEXTURE_2D,this.#a),this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_WRAP_S,this._gl.CLAMP_TO_EDGE),this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_WRAP_T,this._gl.CLAMP_TO_EDGE),this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_MIN_FILTER,this._gl.NEAREST),this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_MAG_FILTER,this._gl.NEAREST),this._gl.texImage2D(this._gl.TEXTURE_2D,0,this._gl.RGBA32F,this._gl.RGBA,this._gl.FLOAT,t),this._gl.useProgram(this._program),this._gl.uniform1i(this.#r,c.#t),c.#t++,{tex:this.#a,index:c.#t-1}}setUniformValue(t,e,i){const s=this._gl.getUniformLocation(this._program,t);if(-1===s)throw new Error("This uniform doesn't exist in the shader code.");this._gl.useProgram(this._program),i.startsWith("Matrix")?this._gl["uniform"+i](s,!1,e):this._gl["uniform"+i](s,e)}draw(t){this.#h||(this.#h=!0,this.#l()),this._gl.frontFace(this._gl.CCW),this._gl.enable(this._gl.CULL_FACE),this._gl.cullFace(this._gl.BACK),this.useDepthTest&&(this._gl.enable(this._gl.DEPTH_TEST),this._gl.depthFunc(this._gl.LESS)),this.updateModelMatrix(),this._gl.bindVertexArray(this._vaoLoc),this._gl.useProgram(this._program),this.loadMVP(t),this._gl.drawArrays(this._primitive,0,this.#n),this._gl.disable(this._gl.CULL_FACE),this.useDepthTest&&this.gl.disable(this._gl.DEPTH_TEST)}static changeTex(t,{tex:e,index:i},s){t.bindTexture(t.TEXTURE_2D,e),t.texImage2D(t.TEXTURE_2D,0,t.RGBA32F,t.RGBA,t.FLOAT,s)}}a=new e(3),e!=Float32Array&&(a[0]=0,a[1]=0,a[2]=0);class l{#g;#m;#d;set scaleX(t){if(t<=0)throw new Error("the scale of a image need to be greater than 0");this.#g.scale[0]=t}set scaleY(t){if(t<=0)throw new Error("the scale of a image need to be greater than 0");this.#g.scale[1]=t}set positionX(t){this.#g.position[0]=t}set positionY(t){this.#g.position[1]=t}set depth(t){this.#g.position[2]=t}set rotation(t){this.#g.rotation[2]=t}set scale(t){if(!(t instanceof Array)||2!==t.length)throw new Error("scale need to be a vector with two positions.");this.#g.scale=function(t,i,s){var o=new e(3);return o[0]=t,o[1]=i,o[2]=1,o}(t[0],t[1])}set opacity(t){this.#g.setUniformValue("alpha",t,"1f")}get positionX(){return this.#g.position[0]}get positionY(){return this.#g.position[1]}async init(t,e){this.#g=new c(t,"#version 300 es\n    precision highp float;\n\n    uniform mat4 mvp;\n\n    in vec4 position;\n    in vec2 texCoord;\n\n    out vec2 fTexCoord;\n\n    void main() {\n        gl_Position  = mvp * position;\n        fTexCoord = texCoord;\n    }\n","#version 300 es\n    precision highp float;\n    \n    in vec2 fTexCoord;\n\n    uniform sampler2D uTexture;\n    uniform float alpha;\n\n    out vec4 color;\n\n    void main() {\n        color = texture(uTexture, fTexCoord);\n\n        if(color.a < 0.2) discard;\n\n        color *= alpha;\n    }\n",t.TRIANGLES);const i=await this.#u(e),s=this.#f(...i);this.#g.addAttribute("position",s.coords),this.#g.addAttribute("texCoord",s.texCoords,2),this.opacity=1}static async loadImage(t){return new Promise((e=>{const i=new Image;i.addEventListener("load",(()=>{e(i)})),i.src=t}))}async#u(t){const e=await l.loadImage(t);await e.decode();const i=await createImageBitmap(e);return this._tex=this.#g.createTex(e,"uTexture"),[i.width,i.height]}#f(t,e){const i=t/e;let s=1,o=1;i<1?s*=i:o/=i,this.#m=s,this.#d=o;const n=[-s,-o,0,1],r=[s,-o,0,1],a=[s,o,0,1],h=[-s,o,0,1];return{coords:[...n,...r,...a,...n,...a,...h],texCoords:[0,1,1,1,1,0,0,1,1,0,0,0]}}pointCollision(t,e,o){const a=[t,e,0,1],h=i();s(h,this.#g.modelMatrix),o&&r(h,o.viewProjection,h);const c=i();n(c,h);const l=function(t,e){const i=new Array(e.length).fill(0);if(Math.round(e.length**2)===t.length){for(let s=0;s<e.length;s++)for(let o=0;o<t.length;o+=4)i[s]+=t[o+s]*e[o/4];return i}}(c,a);return Math.abs(l[0])<this.#m&&Math.abs(l[1])<this.#d}draw(t){this.#g&&this.#g.draw(t)}}class g{attributes=new Map;id;hEdge;constructor(t){this.id=t}}class m{opositte;next;vertex;constructor(t){this.vertex=t}}class d{hEdge;constructor(t){this.hEdge=t}}class u{#p=[];#_=[];#w=[];constructor(t){for(let e=0;e<t.length;e+=3){const i=t[e],s=t[e+1],o=t[e+2];this.#_[i]||(this.#_[i]=new g(i)),this.#_[s]||(this.#_[s]=new g(s)),this.#_[o]||(this.#_[o]=new g(o));const n=new m(this.#_[i]),r=new m(this.#_[s]),a=new m(this.#_[o]);n.next=r,r.next=a,a.next=n;const h=new d(n);this.#p[e]=n,this.#p[e+1]=r,this.#p[e+2]=a,this.#w[Math.round(e/3)]=h}this.setOposittes()}setOposittes(){for(let t of this.#p){const e=t.vertex,i=t.next.vertex;if(e.hEdge||(e.hEdge=t),!t.opositte)for(let s of this.#p)if(s.vertex===i&&s.next.vertex===e){t.opositte=s,s.opositte=t;break}}}setAttribute(t,e,i){if(t.length/e!==this.#_.length)throw new Error(`Mesh haves ${this.#_.length} vertices, but only ${t.length/e} were given.`);for(let s=0;s<t.length;s+=e){const o=t.slice(s,s+e);this.#_[Math.round(s/e)].attributes.set(i,o)}}createVBOs(){const t=new Map,e=[];for(let e of this.#_)for(let i of e.attributes.keys())t.get(i)||t.set(i,[]),t.get(i).push(...e.attributes.get(i));for(let t of this.#p)e.push(t.vertex.id);return{attributes:t,indexes:e,count:this.#_.length}}}class f extends c{#v;#x=-1;#b;#h=!1;set border(t){this.#b=t}constructor(t,e,i,s){super(t,e,i,t.TRIANGLES),this.#v=new u(s)}addAttribute(t,e,i=4){if(!(e instanceof Array))throw new Error("The info parameter needs to be a Array.");if(e.forEach((t=>{if("number"!=typeof t)throw new Error("The info array need to be numeric.")})),-1===this._gl.getAttribLocation(this._program,t))throw new Error(`the attribute ${t} doesn't exists in the shader code.`);this.#v.setAttribute(e,i,t),this.#h=!1}#l(){const t=this.#v.createVBOs(),e=Array.from(t.attributes.entries()).map((e=>({loc:this._gl.getAttribLocation(this._program,e[0]),buffer:h.createBuffer(this._gl,this._gl.ARRAY_BUFFER,new Float32Array(e[1])),dimension:Math.round(e[1].length/t.count)})));this._vaoLoc=h.createVAO(this._gl,...e),this.#x=h.createBuffer(this._gl,this._gl.ELEMENT_ARRAY_BUFFER,new Uint32Array(t.indexes)),this._count=t.indexes.length,this.#h=!0}draw(t){this.#h||this.#l(),this.useDepthTest&&(this._gl.enable(this._gl.DEPTH_TEST),this._gl.depthFunc(this._gl.LESS)),this._gl.frontFace(this._gl.CCW),this._gl.enable(this._gl.CULL_FACE),this._gl.cullFace(this._gl.BACK),this._gl.bindVertexArray(this._vaoLoc),this._gl.useProgram(this._program),this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER,this.#x);const e=this._gl.getUniformLocation(this._program,"model"),s=this._gl.getUniformLocation(this._program,"modelView"),o=this._gl.getUniformLocation(this._program,"mvp");if(e)this._gl.uniformMatrix4fv(e,!1,this.modelMatrix);else if(s){const s=i();r(s,t.viewMatrix,this.modelMatrix),this._gl.uniformMatrix4fv(e,!1,s)}else if(o){const s=i();r(s,t.viewProjection,this.modelMatrix),this._gl.uniformMatrix4fv(e,!1,s)}this._gl.drawElements(this._primitive,this._count,this._gl.UNSIGNED_INT,0),this._gl.disable(this._gl.CULL_FACE),this.useDepthTest&&this._gl.disable(this._gl.DEPTH_TEST)}pointCollision(t,e,i){return!!this.#b&&this.#b.pointCollision(t,e,i,this)}get drawBorder(){return this.#b.draw()}static async loadMeshFromObj(t,e,i,s,o){const n=await fetch(t),r=await n.text(),a=new Map,h=r.split("\n"),c=[],g=[],m=[],d=[];let u=0;for(let t of h)if(t.startsWith("vn")){const e=t.replace("vn ","").split(" ").map(Number.parseFloat);g.push(...e,1);const i=Math.sqrt(p(e,e));if(Math.abs(p(e,[0,0,1])/i)<.5){const t=e.join(",");a.get(t)||a.set(t,u)}u++}else if(t.startsWith("vt")){const e=t.replace("vt ","").split(" ").map(Number.parseFloat);m.push(...e)}else if(t.startsWith("v")){const e=t.replace("v ","").split(" ").map(Number.parseFloat);c.push(...e,1)}else if(t.startsWith("f")){const e=t.replace("f ","").split(" ").map((t=>{const e=t.indexOf("/"),i=t.slice(0,e);return Number.parseInt(i)-1}));d.push(...e)}const w=new _(a,c,e),v=new f(e,i,s,d);if(v.addAttribute("position",c),v.addAttribute("normal",g),v.useDepthTest=!0,0!==m.length){if(!o)throw new Error("This mesh need to a texture path");v.addAttribute("texCoord",m,3);const t=await l.loadImage(o);v.createTex(t,"uTexture")}return v.border=w,v}}const p=(t,e)=>t.reduce(((t,i,s)=>t+i*e[s]),0);class _{#E;#M;#T;#A;#y;constructor(t,e){this.#E=t,this.#M=e;let i=1/0,s=-1/0;for(let t=0;t<this.#M.length;t+=4)this.#M[t+2]<i&&(i=this.#M[t+2]),this.#M[t+2]>s&&(s=this.#M[t+2]);this.#A=i,this.#y=s}pointCollision(t,e,i,s){return this.#P(t,e,this.#A,i,s)||this.#P(t,e,this.#y,i,s)}#P(t,e,o,a,h){const c=[t,e,o,1],l=i();s(l,h.modelMatrix),a&&r(l,a.viewMatrix,l);const g=i();n(g,l);let m=_.multiplyMatWithVec(g,c);console.log(c,m);let d=this.#C(m);return d&&(this.#T=c),d}#C(t){let e,i,s=0;console.log("collide"),console.log(t);for(let o of this.#E.entries()){const n=4*o[1],r=[this.#M[n],this.#M[n+1],this.#M[n+2]];if(!e){e=r,i=r;continue}const a=[r[0],i[0]];a.sort();const[h,c]=a,l=[r[1],i[1]];l.sort();const[g,m]=l,d=(g-m)/(h-c),u=g-h*d;t[1]<=m&&t[1]>=g&&t[0]<=(t[1]-u)/d&&(s++,console.log(i,r,(t[1]-u)/d)),i=r}const o=Math.max(e[0],i[0]),n=[e[1],i[1]];n.sort();const[r,a]=n;return t[1]<=a&&t[1]>=r&&t[0]<=o&&s++,s%2==1}draw(){const t=document.createElement("canvas");t.width=1e3,t.height=1e3,t.style.backgroundColor="rgb(100, 0, 0)";const e=t.getContext("2d");let i;e.beginPath();for(let t of this.#E.entries()){const s=4*t[1],o=[this.#M[s],this.#M[s+1],this.#M[s+2]];i?e.lineTo(500*o[0]+250,500*(1-o[1])):(i=o,e.moveTo(500*o[0]+250,500*(1-o[1])))}return e.lineTo(500*i[0]+250,500*(1-i[1])),e.stroke(),this.#T&&e.fillRect(500*this.#T[0]+250,500*(1-this.#T[1]),5,5),t}static multiplyMatWithVec(t,e){const i=new Array(e.length).fill(0);if(Math.round(e.length**2)===t.length){for(let s=0;s<e.length;s++)for(let o=0;o<t.length;o+=4)i[s]+=t[o+s]*e[o/4];return i}}}const w="#version 300 es\n    precision highp float;\n\n    uniform mat4 model;\n    uniform mat4 view;\n    uniform mat4 projection;\n    uniform vec4 color;\n\n    in vec4 position;\n    in vec4 normal;\n\n    out vec4 fPos;\n    out vec4 fColor;\n    out vec4 fNormal;\n\n    void main() {\n        gl_Position = (projection*view*model) * position;\n        gl_Position /= gl_Position.w;\n        fColor = color;\n        fPos = position;\n        fNormal = normal;\n    }\n",v="#version 300 es\n    precision highp float;\n    \n    uniform mat4 model;\n    uniform mat4 view;\n    uniform mat4 projection;\n\n    uniform vec3 amb_c;\n    uniform vec3 dif_c;\n    uniform vec3 esp_c;\n    uniform vec3 pos;\n    uniform float amb_k;\n    uniform float dif_k;\n    uniform float esp_k;\n    uniform float esp_p;\n\n    in vec4 fColor;\n    in vec4 normal;\n    in vec4 fPos;\n    in vec4 fNormal;\n\n    out vec4 color;\n\n    void main() {\n        mat4 modelView = view*model;\n\n        vec3 lightPos = (view * vec4(pos, 1.0)).xyz;\n        vec3 pos = -(modelView * fPos).xyz;\n\n        vec3 vNormal = normalize(inverse(transpose(modelView)) * fNormal).xyz;\n        vec3 vDistance = normalize(pos - lightPos);\n\n        vec3 normalPos = normalize(pos);\n\n        vec3 halfVector= normalize(vDistance + normalPos);\n\n        vec3 amb = amb_k * amb_c;\n\n        vec3 diff = max(dot(vNormal, vDistance), 0.0) * dif_k * dif_c;\n\n        vec3 spec = max(pow(dot(vNormal, halfVector), esp_p), 0.0) * esp_c * esp_k;\n\n        vec3 color3 = vec3(fColor);\n        \n        color3 = 0.5*color3 + 0.5*(diff + amb + spec);\n\n        color = vec4(color3, 1.0);\n    }\n";class x extends l{#S;async init(t,e=1e3){const i=document.createElement("canvas"),s=i.toDataURL("image/png");[i.width,i.height]=[e,e],await super.init(t,s),this.#S=i}async update(t=(()=>{}),e){t(this.#S.getContext("2d"));const i=this.#S.toDataURL("image/png"),s=await l.loadImage(i);c.changeTex(e,this._tex,s)}}class b{#L=i();#U=i();#R=i();camPosition=[0,0,1];lookDirection=[0,0,0];upDirection=[0,1,0];left=-4;right=4;bottom=-4;top=4;near=1;far=9;fovy=Math.PI/2;aspect;constructor(t){this.aspect=t.width/t.height}#F="perspective";set projectionType(t){if("orthogonal"!==t&&"perspective"!==t)throw new Error("Invalid type of projection.");this.#F=t}get viewMatrix(){return this.#V(),this.#L}get projMatrix(){return this.#I(),this.#U}#V(){o(this.#L),function(e,i,s,n){var r,a,h,c,l,g,m,d,u,f,p=i[0],_=i[1],w=i[2],v=n[0],x=n[1],b=n[2],E=s[0],M=s[1],T=s[2];Math.abs(p-E)<t&&Math.abs(_-M)<t&&Math.abs(w-T)<t?o(e):(m=p-E,d=_-M,u=w-T,r=x*(u*=f=1/Math.hypot(m,d,u))-b*(d*=f),a=b*(m*=f)-v*u,h=v*d-x*m,(f=Math.hypot(r,a,h))?(r*=f=1/f,a*=f,h*=f):(r=0,a=0,h=0),c=d*h-u*a,l=u*r-m*h,g=m*a-d*r,(f=Math.hypot(c,l,g))?(c*=f=1/f,l*=f,g*=f):(c=0,l=0,g=0),e[0]=r,e[1]=c,e[2]=m,e[3]=0,e[4]=a,e[5]=l,e[6]=d,e[7]=0,e[8]=h,e[9]=g,e[10]=u,e[11]=0,e[12]=-(r*p+a*_+h*w),e[13]=-(c*p+l*_+g*w),e[14]=-(m*p+d*_+u*w),e[15]=1)}(this.#L,this.camPosition,this.lookDirection,this.upDirection)}#I(){o(this.#U),"perspective"===this.#F?function(t,e,i,s,o){var n,r=1/Math.tan(e/2);t[0]=r/i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=r,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=o&&o!==1/0?(n=1/(s-o),t[10]=(o+s)*n,t[14]=2*o*s*n):(t[10]=-1,t[14]=-2*s)}(this.#U,this.fovy,this.aspect,this.near,this.far):function(t,e,i,s,o,n,r){var a=1/(e-i),h=1/(s-o),c=1/(n-r);t[0]=-2*a,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*h,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*c,t[11]=0,t[12]=(e+i)*a,t[13]=(o+s)*h,t[14]=(r+n)*c,t[15]=1}(this.#U,this.left*this.aspect,this.right*this.aspect,this.bottom,this.top,this.left,this.right)}get viewProjection(){return this.#V(),this.#I(),o(this.#R),r(this.#R,this.#U,this.#L),this.#R}}class E{ambColor=[0,0,0];ambK=3;difColor=[.3,.3,.3];difK=4;espColor=[1,1,1];espK=3;espExp=20;pos;constructor(t){this.pos=t}createUniforms(t){t.setUniformValue("amb_c",this.ambColor,"3fv"),t.setUniformValue("amb_k",this.ambK,"1f"),t.setUniformValue("dif_c",this.difColor,"3fv"),t.setUniformValue("dif_k",this.difK,"1f"),t.setUniformValue("esp_c",this.espColor,"3fv"),t.setUniformValue("esp_k",this.espK,"1f"),t.setUniformValue("esp_p",this.espExp,"1f")}}class M{#j=[];#k;#D;get camera(){return this.#D}constructor(t,e=[0,0,0,1]){if(t instanceof WebGL2RenderingContext){if(t.viewport(0,0,t.canvas.width,t.canvas.height),!e||!e.length||4!==e.length)throw new Error("The clear color need to be a array with 4 floats");t.clearColor(0,0,0,1),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),this.gl=t}}createCamera(t){this.#D=new b(t)}createLight(t){this.#k=new E(t)}appendElement(...t){t.forEach((t=>{if(!t.draw)throw new Error("Element need to have a draw function");this.#j.push(t),this.#k&&t instanceof c&&this.#k.createUniforms(t)}))}draw(){for(let t of this.#j)t.draw(this.#D)}}class T{#X;#Y;#B;#O=!1;static async build(t){const e=new T;return await e.init(t),e}async init(t){this.gl=t.getContext("webgl2"),await this.#N(),await this.#G()}async#N(){this.#X=new M(this.gl);const t=new l;await t.init(this.gl,"./assets/menu/fundo.jpg");const e=new l;await e.init(this.gl,"./assets/menu/logo_war.png");const i=new l;await i.init(this.gl,"./assets/menu/play_button.png");const s=new l;await s.init(this.gl,"./assets/menu/settings_button.png");const o=new l;await o.init(this.gl,"./assets/menu/max_button.png"),t.scaleY=1.85,e.scale=[.35,.56],i.scale=[.15,.26],s.scale=[.046,.08],o.scale=[.046,.08],e.positionY=.25,i.positionY=-.55,s.positionX=.9,s.positionY=.57,o.positionX=.9,o.positionY=.8,this.#X.appendElement(t,e,i,s,o),this.gl.canvas.addEventListener("click",(t=>{const e=T.mapClickInCanvas(t.clientX,t.clientY,this.gl.canvas);i.pointCollision(...e)&&(this.#O=!0)}))}async#G(){const t=new l;await t.init(this.gl,"./assets/mapa.jpg");const e=new l;await e.init(this.gl,"./assets/menu/settings_button.png");const i=new l;await i.init(this.gl,"./assets/menu/max_button.png");const s=new l;await s.init(this.gl,"./assets/game/card_button.png");const o=new l;await o.init(this.gl,"./assets/game/objective_button.png");const n=new l;await n.init(this.gl,"./assets/game/current_player.png");const r=new l;await r.init(this.gl,"./assets/game/show_players.png");const a=new A;await a.init(this.gl);const h=new y;await h.init(this.gl),t.scale=[2.7,2.7],e.scale=[.046,.08],i.scale=[.046,.08],s.scale=[.5,.8],o.scale=[.47,.8],n.scale=[1.5,2.5],r.scale=[.47,.8],e.positionX=.9,e.positionY=.57,e.depth=.2,i.positionX=.9,i.positionY=.8,i.depth=.2,s.positionX=2.9,s.positionY=-3.2,s.depth=.2,o.positionX=3.6,o.positionY=-3.2,o.depth=.2,r.positionX=-3.6,r.positionY=-3.2,r.depth=.2,n.positionY=-3.375,n.depth=.2;const c=await f.loadMeshFromObj("./assets/meshes/brasil-rotacionado.obj",this.gl,w,v);c.scale=[1.2,1.2,1],c.position=[-0,-0,.3],c.rotation[1]=-.2;const g=await f.loadMeshFromObj("./assets/meshes/argentina.obj",this.gl,w,v);g.scale=[1.6,1.6,1.5],g.position=[-.21,-.35,.3],this.#Y=new M(this.gl),this.#Y.createCamera(P),this.#Y.camera.camPosition[2]=1.8,this.#Y.camera.camPosition[1]=-.3,this.#Y.createLight([1,0,.3]),this.#B=new M(this.gl);const m=new x;await m.init(this.gl),await m.update((t=>{t instanceof CanvasRenderingContext2D&&(t.fillStyle="white",t.ellipse(500,500,400,500,0,0,2*Math.PI),t.lineWidth=100,t.stroke(),t.font="600px Arial",t.fillText("1",320,600))}),this.gl),m.scale=[.1,.1],m.positionY=.2,this.#Y.appendElement(t,c,g,m),this.#B.appendElement(e),c.setUniformValue("view",this.#Y.camera.viewMatrix,"Matrix4fv"),c.setUniformValue("projection",this.#Y.camera.projMatrix,"Matrix4fv"),c.setUniformValue("color",[1,0,0,1],"4fv"),g.setUniformValue("view",this.#Y.camera.viewMatrix,"Matrix4fv"),g.setUniformValue("projection",this.#Y.camera.projMatrix,"Matrix4fv"),g.setUniformValue("color",[0,0,1,1],"4fv"),this.gl.canvas.addEventListener("click",(t=>{if(!this.#O)return;const e=T.mapClickInCanvas(t.clientX,t.clientY,this.gl.canvas);c.pointCollision(...e)&&alert("foi"),g.pointCollision(...e)&&alert("argentina")}))}draw(){this.#O?(this.#Y.draw(),this.#B.draw()):this.#X.draw()}run(){const t=()=>{this.draw(),requestAnimationFrame(t)};t()}static mapClickInCanvas(t,e,i){const s=[t-i.offsetLeft-i.width/2,i.height/2-(e-i.offsetTop)];return[2*s[0]/i.width,2*s[1]/i.height]}}class A{async init(t){this.show_cards=new l,await this.show_cards.init(t,"./assets/game/show_cards.png"),this.show_cards.scale=[1.7,3],console.log(this.show_cards.positionX),A.setInitialPosition(this.show_cards.positionX,-6.355,.3,this.show_cards),this.cancel_button=new l,await this.cancel_button.init(t,"./assets/game/cancel_button.png"),this.cancel_button.scale=[.27,.48],A.setInitialPosition(-1.42,-6.2,.4,this.cancel_button),this.ok_button=new l,await this.ok_button.init(t,"./assets/game/ok_button.png"),this.ok_button.scale=[.27,.48],A.setInitialPosition(1.42,-6.2,.4,this.ok_button),this.cards_info=new l,await this.cards_info.init(t,"assets/game/cards_info.png"),this.cards_info.scale=[.8,1.35],A.setInitialPosition(6.35,this.cards_info.positionY,.3,this.cards_info)}static setInitialPosition(t,e,i,s){s.positionX=t,s.positionY=e,s.depth=i}moveAll(t,e){this.show_cards.positionY+=e,this.cancel_button.positionY+=e,this.ok_button.positionY+=e,this.cards_info.positionX+=t}draw(t){this.show_cards.draw(t),this.cancel_button.draw(t),this.ok_button.draw(t),this.cards_info.draw(t)}}class y{async init(t){this.fortify=new l,await this.fortify.init(t,"./assets/game/fortify.png"),this.fortify.scale=[1.7,3],y.setInitialPosition(this.fortify.positionX,-3.25,.3,this.fortify),this.cancel_button=new l,await this.cancel_button.init(t,"./assets/game/cancel_button.png"),this.cancel_button.scale=[.27,.48],A.setInitialPosition(1.42,-3.2,.4,this.cancel_button),this.ok_button=new l,await this.ok_button.init(t,"./assets/game/ok_button.png"),this.ok_button.scale=[.27,.48],A.setInitialPosition(1.42,-3.2,.4,this.ok_button)}static setInitialPosition(t,e,i,s){s.positionX=t,s.positionY=e,s.depth=i}moveAll(t){this.fortify.positionY+=t,this.cancel_button.positionY+=t,this.ok_button.positionY+=t}draw(t){this.fortify.draw(t),this.cancel_button.draw(t),this.ok_button.draw(t)}}const P=document.querySelector("#game-screen");T.build(P).then((t=>{t.run()}))})();
//# sourceMappingURL=main.bundle.js.map