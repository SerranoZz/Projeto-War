(()=>{"use strict";var t=1e-6,e="undefined"!=typeof Float32Array?Float32Array:Array;function i(){var t=new e(16);return e!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function r(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function o(t,e){var i=e[0],r=e[1],o=e[2],s=e[3],a=e[4],n=e[5],h=e[6],l=e[7],c=e[8],u=e[9],d=e[10],g=e[11],m=e[12],f=e[13],p=e[14],x=e[15],M=i*n-r*a,v=i*h-o*a,w=i*l-s*a,T=r*h-o*n,E=r*l-s*n,A=o*l-s*h,P=c*f-u*m,_=c*p-d*m,b=c*x-g*m,y=u*p-d*f,R=u*x-g*f,S=d*x-g*p,L=M*S-v*R+w*y+T*b-E*_+A*P;return L?(L=1/L,t[0]=(n*S-h*R+l*y)*L,t[1]=(o*R-r*S-s*y)*L,t[2]=(f*A-p*E+x*T)*L,t[3]=(d*E-u*A-g*T)*L,t[4]=(h*b-a*S-l*_)*L,t[5]=(i*S-o*b+s*_)*L,t[6]=(p*w-m*A-x*v)*L,t[7]=(c*A-d*w+g*v)*L,t[8]=(a*R-n*b+l*P)*L,t[9]=(r*b-i*R-s*P)*L,t[10]=(m*E-f*w+x*M)*L,t[11]=(u*w-c*E-g*M)*L,t[12]=(n*_-a*y-h*P)*L,t[13]=(i*y-r*_+o*P)*L,t[14]=(f*v-m*T-p*M)*L,t[15]=(c*T-u*v+d*M)*L,t):null}function s(t,e,i){var r=e[0],o=e[1],s=e[2],a=e[3],n=e[4],h=e[5],l=e[6],c=e[7],u=e[8],d=e[9],g=e[10],m=e[11],f=e[12],p=e[13],x=e[14],M=e[15],v=i[0],w=i[1],T=i[2],E=i[3];return t[0]=v*r+w*n+T*u+E*f,t[1]=v*o+w*h+T*d+E*p,t[2]=v*s+w*l+T*g+E*x,t[3]=v*a+w*c+T*m+E*M,v=i[4],w=i[5],T=i[6],E=i[7],t[4]=v*r+w*n+T*u+E*f,t[5]=v*o+w*h+T*d+E*p,t[6]=v*s+w*l+T*g+E*x,t[7]=v*a+w*c+T*m+E*M,v=i[8],w=i[9],T=i[10],E=i[11],t[8]=v*r+w*n+T*u+E*f,t[9]=v*o+w*h+T*d+E*p,t[10]=v*s+w*l+T*g+E*x,t[11]=v*a+w*c+T*m+E*M,v=i[12],w=i[13],T=i[14],E=i[15],t[12]=v*r+w*n+T*u+E*f,t[13]=v*o+w*h+T*d+E*p,t[14]=v*s+w*l+T*g+E*x,t[15]=v*a+w*c+T*m+E*M,t}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});var a;class n{static createShader(t,e,i){const r=t.createShader(e);if(t.shaderSource(r,i),t.compileShader(r),!t.getShaderParameter(r,t.COMPILE_STATUS)){const e=t.getShaderInfoLog(r);throw new Error("Shader compilation error: "+e)}return r}static createProgram(t,e,i){const r=t.createProgram();if(t.attachShader(r,e),t.attachShader(r,i),t.linkProgram(r),!t.getProgramParameter(r,t.LINK_STATUS)){const e=t.getProgramInfoLog(r);throw new Error("Could not compile WebGL program:"+e)}return r}static createBuffer(t,e,i){if(0==i.length)return null;if(!(i&&i.buffer instanceof ArrayBuffer&&void 0!==i.byteLength))return console.warn("Data is not an instance of ArrayBuffer"),null;const r=t.createBuffer();return t.bindBuffer(e,r),t.bufferData(e,i,t.STATIC_DRAW),r}static createVAO(t,...e){if(!(t instanceof WebGL2RenderingContext))return;const i=t.createVertexArray();let r,o;t.bindVertexArray(i);for(let i of e)null!=i.loc&&null!=i.loc&&(t.enableVertexAttribArray(i.loc),r=i.dimension,o=t.FLOAT,t.bindBuffer(t.ARRAY_BUFFER,i.buffer),t.vertexAttribPointer(i.loc,r,o,!1,0,0));return i}}class h{#t;position=[0,0,0];rotation=[0,0,0];scale=[1,1,1];static#e=0;#i=i();#r=[];#o=null;#s=null;#a=null;#n;#h;#l;#c;#u;#d=!0;get modelMatrix(){return this.#g(),this.#i}set useModelMatrix(t){if(!(t instanceof Boolean))throw new Error("useModelMatrix need to be a boolean value");this.#d=t}addAttribute(t,e,i=4){if(!(e instanceof Array))throw new Error("The info parameter needs to be a Array.");e.forEach((t=>{if("number"!=typeof t)throw new Error("The info array need to be numeric.")}));const r=e.length/i;if(this.#h){if(r!==this.#h)throw new Error("The VBOs need to contain the same number of vertex.")}else this.#h=r;const o=new Float32Array(e);this.#r.push({loc:this.#t.getAttribLocation(this.#a,t),buffer:n.createBuffer(this.#t,this.#t.ARRAY_BUFFER,o),dimension:i})}constructor(t,e,i,r){this.#n=r,this.#t=t,this.createShader(e,i)}createShader(t,e){this.#o=n.createShader(this.#t,this.#t.VERTEX_SHADER,t),this.#s=n.createShader(this.#t,this.#t.FRAGMENT_SHADER,e),this.#a=n.createProgram(this.#t,this.#o,this.#s),this.#t.useProgram(this.#a)}createVAO(){this.#l=n.createVAO(this.#t,...this.#r)}#g(){var t,e,i,o,s,a,n,h,l,c,u,d,g,m,f,p,x,M;r(this.#i),t=this.#i,e=this.#i,p=(i=this.position)[0],x=i[1],M=i[2],e===t?(t[12]=e[0]*p+e[4]*x+e[8]*M+e[12],t[13]=e[1]*p+e[5]*x+e[9]*M+e[13],t[14]=e[2]*p+e[6]*x+e[10]*M+e[14],t[15]=e[3]*p+e[7]*x+e[11]*M+e[15]):(o=e[0],s=e[1],a=e[2],n=e[3],h=e[4],l=e[5],c=e[6],u=e[7],d=e[8],g=e[9],m=e[10],f=e[11],t[0]=o,t[1]=s,t[2]=a,t[3]=n,t[4]=h,t[5]=l,t[6]=c,t[7]=u,t[8]=d,t[9]=g,t[10]=m,t[11]=f,t[12]=o*p+h*x+d*M+e[12],t[13]=s*p+l*x+g*M+e[13],t[14]=a*p+c*x+m*M+e[14],t[15]=n*p+u*x+f*M+e[15]),function(t,e,i){var r=Math.sin(i),o=Math.cos(i),s=e[4],a=e[5],n=e[6],h=e[7],l=e[8],c=e[9],u=e[10],d=e[11];e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[4]=s*o+l*r,t[5]=a*o+c*r,t[6]=n*o+u*r,t[7]=h*o+d*r,t[8]=l*o-s*r,t[9]=c*o-a*r,t[10]=u*o-n*r,t[11]=d*o-h*r}(this.#i,this.#i,this.rotation[0]),function(t,e,i){var r=Math.sin(i),o=Math.cos(i),s=e[0],a=e[1],n=e[2],h=e[3],l=e[8],c=e[9],u=e[10],d=e[11];e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=s*o-l*r,t[1]=a*o-c*r,t[2]=n*o-u*r,t[3]=h*o-d*r,t[8]=s*r+l*o,t[9]=a*r+c*o,t[10]=n*r+u*o,t[11]=h*r+d*o}(this.#i,this.#i,this.rotation[1]),function(t,e,i){var r=Math.sin(i),o=Math.cos(i),s=e[0],a=e[1],n=e[2],h=e[3],l=e[4],c=e[5],u=e[6],d=e[7];e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=s*o+l*r,t[1]=a*o+c*r,t[2]=n*o+u*r,t[3]=h*o+d*r,t[4]=l*o-s*r,t[5]=c*o-a*r,t[6]=u*o-n*r,t[7]=d*o-h*r}(this.#i,this.#i,this.rotation[2]),function(t,e,i){var r=i[0],o=i[1],s=i[2];t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t[3]=e[3]*r,t[4]=e[4]*o,t[5]=e[5]*o,t[6]=e[6]*o,t[7]=e[7]*o,t[8]=e[8]*s,t[9]=e[9]*s,t[10]=e[10]*s,t[11]=e[11]*s,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]}(this.#i,this.#i,this.scale)}createTex(t,e){this.#c=this.#t.getUniformLocation(this.#a,e),this.#u=this.#t.createTexture(),this.#t.activeTexture(this.#t[`TEXTURE${h.#e}`]),this.#t.bindTexture(this.#t.TEXTURE_2D,this.#u),this.#t.texParameteri(this.#t.TEXTURE_2D,this.#t.TEXTURE_WRAP_S,this.#t.CLAMP_TO_EDGE),this.#t.texParameteri(this.#t.TEXTURE_2D,this.#t.TEXTURE_WRAP_T,this.#t.CLAMP_TO_EDGE),this.#t.texParameteri(this.#t.TEXTURE_2D,this.#t.TEXTURE_MIN_FILTER,this.#t.NEAREST),this.#t.texParameteri(this.#t.TEXTURE_2D,this.#t.TEXTURE_MAG_FILTER,this.#t.NEAREST),this.#t.texImage2D(this.#t.TEXTURE_2D,0,this.#t.RGBA32F,this.#t.RGBA,this.#t.FLOAT,t),this.#t.useProgram(this.#a),this.#t.uniform1i(this.#c,h.#e),h.#e++}setUniformValue(t,e,i){const r=this.#t.getUniformLocation(this.#a,t);if(-1===r)throw new Error("This uniform doesn't exist in the shader code.");this.#t.useProgram(this.#a),this.#t["uniform"+i](r,e)}draw(t){this.#t.frontFace(this.#t.CCW),this.#t.enable(this.#t.CULL_FACE),this.#t.cullFace(this.#t.BACK),this.#g();const e=this.#d?this.#i:i();console.log(e),t&&s(e,t.viewProjection,e),this.#t.useProgram(this.#a);const r=this.#t.getUniformLocation(this.#a,"mvp");-1!==e&&this.#t.uniformMatrix4fv(r,!1,e),this.#t.drawArrays(this.#n,0,this.#h),this.#t.disable(this.#t.CULL_FACE)}}a=new e(3),e!=Float32Array&&(a[0]=0,a[1]=0,a[2]=0);class l{#m;#f=i();#p;#x;set scaleX(t){if(t<=0)throw new Error("the scale of a image need to be greater than 0");this.#m.scale[0]=t,o(this.#f,this.#m.modelMatrix)}set scaleY(t){if(t<=0)throw new Error("the scale of a image need to be greater than 0");this.#m.scale[1]=t,o(this.#f,this.#m.modelMatrix)}set positionX(t){this.#m.position[0]=t,o(this.#f,this.#m.modelMatrix)}set positionY(t){this.#m.position[1]=t,o(this.#f,this.#m.modelMatrix)}set depth(t){this.#m.position[2]=t,o(this.#f,this.#m.modelMatrix)}set rotation(t){this.#m.rotation[2]=t,o(this.#f,this.#m.modelMatrix)}set scale(t){if(!(t instanceof Array)||2!==t.length)throw new Error("scale need to be a vector with two positions.");this.#m.scale=function(t,i,r){var o=new e(3);return o[0]=t,o[1]=i,o[2]=1,o}(t[0],t[1]),o(this.#f,this.#m.modelMatrix)}set opacity(t){this.#m.setUniformValue("alpha",t,"1f")}async init(t,e){this.#m=new h(t,"#version 300 es\n    precision highp float;\n\n    uniform mat4 mvp;\n\n    in vec4 position;\n    in vec2 texCoord;\n\n    out vec2 fTexCoord;\n\n    void main() {\n        gl_Position  = mvp * position;\n        fTexCoord = texCoord;\n    }\n","#version 300 es\n    precision highp float;\n    \n    in vec2 fTexCoord;\n\n    uniform sampler2D uTexture;\n    uniform float alpha;\n\n    out vec4 color;\n\n\n\n    void main() {\n        color = texture(uTexture, fTexCoord);\n\n        if(color.a < 0.5) discard;\n\n        color.a = alpha;\n    }\n",t.TRIANGLES);const i=await this.#M(e),r=this.#v(...i);this.#m.addAttribute("position",r.coords),this.#m.addAttribute("texCoord",r.texCoords,2),this.#m.createVAO(),this.opacity=1}async#M(t){const e=document.createElement("img");e.src=t,await e.decode();const i=await createImageBitmap(e);return this.#m.createTex(e,"uTexture"),[i.width,i.height]}#v(t,e){const i=t/e;let r=1,o=1;i<1?r*=i:o/=i,this.#p=r,this.#x=o;const s=[-r,-o,0,1],a=[r,-o,0,1],n=[r,o,0,1],h=[-r,o,0,1];return{coords:[...s,...a,...n,...s,...n,...h],texCoords:[0,1,1,1,1,0,0,1,1,0,0,0]}}pointCollision(t,e,r){const a=[t,e,0,1],n=i();if(function(t,e){t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]}(n,this.#f),r){const t=r.viewProjection,e=i();o(e,t),s(n,n,e)}const h=function(t,e){const i=new Array(e.length).fill(0);if(Math.round(e.length**2)===t.length){for(let r=0;r<e.length;r++)for(let o=0;o<t.length;o+=4)i[r]+=t[o+r]*e[o/4];return i}}(n,a);return Math.abs(h[0])<this.#p&&Math.abs(h[1])<this.#x}draw(t){this.#m&&this.#m.draw(t)}}class c{#w=i();#T=i();#E=i();camPosition=[0,0,1];lookDirection=[0,0,0];upDirection=[0,1,0];left=-4;right=4;bottom=-4;top=4;near=1;far=9;fovy=Math.PI/1.3;aspect;constructor(t){this.aspect=t.width/t.height}#A="perspective";set projectionType(t){if("orthogonal"!==t&&"perspective"!==t)throw new Error("Invalid type of projection.");this.typeOfProjection=t}get viewMatrix(){return this.#P(),this.#w}get projMatrix(){return this.#_(),this.#T}#P(){r(this.#w),function(e,i,o,s){var a,n,h,l,c,u,d,g,m,f,p=i[0],x=i[1],M=i[2],v=s[0],w=s[1],T=s[2],E=o[0],A=o[1],P=o[2];Math.abs(p-E)<t&&Math.abs(x-A)<t&&Math.abs(M-P)<t?r(e):(d=p-E,g=x-A,m=M-P,a=w*(m*=f=1/Math.hypot(d,g,m))-T*(g*=f),n=T*(d*=f)-v*m,h=v*g-w*d,(f=Math.hypot(a,n,h))?(a*=f=1/f,n*=f,h*=f):(a=0,n=0,h=0),l=g*h-m*n,c=m*a-d*h,u=d*n-g*a,(f=Math.hypot(l,c,u))?(l*=f=1/f,c*=f,u*=f):(l=0,c=0,u=0),e[0]=a,e[1]=l,e[2]=d,e[3]=0,e[4]=n,e[5]=c,e[6]=g,e[7]=0,e[8]=h,e[9]=u,e[10]=m,e[11]=0,e[12]=-(a*p+n*x+h*M),e[13]=-(l*p+c*x+u*M),e[14]=-(d*p+g*x+m*M),e[15]=1)}(this.#w,this.camPosition,this.lookDirection,this.upDirection)}#_(){r(this.#T),"perspective"==this.typeOfProjection?function(t,e,i,r,o){var s,a=1/Math.tan(e/2);t[0]=a/i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=o&&o!==1/0?(s=1/(r-o),t[10]=(o+r)*s,t[14]=2*o*r*s):(t[10]=-1,t[14]=-2*r)}(this.#T,this.fovy,this.aspect,this.near,this.far):function(t,e,i,r,o,s,a){var n=1/(e-i),h=1/(r-o),l=1/(s-a);t[0]=-2*n,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*h,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*l,t[11]=0,t[12]=(e+i)*n,t[13]=(o+r)*h,t[14]=(a+s)*l,t[15]=1}(this.#T,1024*this.left/768,1024*this.right/768,this.bottom,this.top,this.left,this.right)}get viewProjection(){return this.#P(),this.#_(),r(this.#E),s(this.#E,this.#T,this.#w),this.#E}}!async function(t){if(!(t instanceof HTMLCanvasElement))return;const e=t.getContext("webgl2",{premultipliedalpha:!1}),i=window.devicePixelRatio||1;e.canvas.width=1024*i,e.canvas.height=768*i,e.viewport(0,0,e.canvas.width,e.canvas.height),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT);const r=new l;await r.init(e,"./assets/button.png");const o=new c(t);o.typeOfProjection="orthogonal",e.enable(e.DEPTH_TEST),e.depthFunc(e.LESS),r.draw(o),e.disable(e.DEPTH_TEST),t.addEventListener("click",(e=>{const i=function(t,e,i){const r=[t-i.offsetLeft-i.width/2,i.height/2-(e-i.offsetTop)];return[2*r[0]/i.width,2*r[1]/i.height]}(e.clientX,e.clientY,t);alert(r.pointCollision(...i,o))}))}(document.querySelector("#game-screen"))})();
//# sourceMappingURL=main.bundle.js.map