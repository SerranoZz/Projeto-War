(()=>{"use strict";var t=1e-6,e="undefined"!=typeof Float32Array?Float32Array:Array;function i(){var t=new e(16);return e!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function r(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function s(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function o(t,e){var i=e[0],r=e[1],s=e[2],o=e[3],n=e[4],a=e[5],h=e[6],c=e[7],l=e[8],m=e[9],g=e[10],d=e[11],u=e[12],f=e[13],p=e[14],_=e[15],v=i*a-r*n,w=i*h-s*n,x=i*c-o*n,M=r*h-s*a,E=r*c-o*a,b=s*c-o*h,T=l*f-m*u,A=l*p-g*u,C=l*_-d*u,P=m*p-g*f,y=m*_-d*f,S=g*_-d*p,L=v*S-w*y+x*P+M*C-E*A+b*T;return L?(L=1/L,t[0]=(a*S-h*y+c*P)*L,t[1]=(s*y-r*S-o*P)*L,t[2]=(f*b-p*E+_*M)*L,t[3]=(g*E-m*b-d*M)*L,t[4]=(h*C-n*S-c*A)*L,t[5]=(i*S-s*C+o*A)*L,t[6]=(p*x-u*b-_*w)*L,t[7]=(l*b-g*x+d*w)*L,t[8]=(n*y-a*C+c*T)*L,t[9]=(r*C-i*y-o*T)*L,t[10]=(u*E-f*x+_*v)*L,t[11]=(m*x-l*E-d*v)*L,t[12]=(a*A-n*P-h*T)*L,t[13]=(i*P-r*A+s*T)*L,t[14]=(f*w-u*M-p*v)*L,t[15]=(l*M-m*w+g*v)*L,t):null}function n(t,e,i){var r=e[0],s=e[1],o=e[2],n=e[3],a=e[4],h=e[5],c=e[6],l=e[7],m=e[8],g=e[9],d=e[10],u=e[11],f=e[12],p=e[13],_=e[14],v=e[15],w=i[0],x=i[1],M=i[2],E=i[3];return t[0]=w*r+x*a+M*m+E*f,t[1]=w*s+x*h+M*g+E*p,t[2]=w*o+x*c+M*d+E*_,t[3]=w*n+x*l+M*u+E*v,w=i[4],x=i[5],M=i[6],E=i[7],t[4]=w*r+x*a+M*m+E*f,t[5]=w*s+x*h+M*g+E*p,t[6]=w*o+x*c+M*d+E*_,t[7]=w*n+x*l+M*u+E*v,w=i[8],x=i[9],M=i[10],E=i[11],t[8]=w*r+x*a+M*m+E*f,t[9]=w*s+x*h+M*g+E*p,t[10]=w*o+x*c+M*d+E*_,t[11]=w*n+x*l+M*u+E*v,w=i[12],x=i[13],M=i[14],E=i[15],t[12]=w*r+x*a+M*m+E*f,t[13]=w*s+x*h+M*g+E*p,t[14]=w*o+x*c+M*d+E*_,t[15]=w*n+x*l+M*u+E*v,t}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});var a;class h{static createShader(t,e,i){const r=t.createShader(e);if(t.shaderSource(r,i),t.compileShader(r),!t.getShaderParameter(r,t.COMPILE_STATUS)){const e=t.getShaderInfoLog(r);throw new Error("Shader compilation error: "+e)}return r}static createProgram(t,e,i){const r=t.createProgram();if(t.attachShader(r,e),t.attachShader(r,i),t.linkProgram(r),!t.getProgramParameter(r,t.LINK_STATUS)){const e=t.getProgramInfoLog(r);throw new Error("Could not compile WebGL program:"+e)}return r}static createBuffer(t,e,i){if(0==i.length)return null;if(!(i&&i.buffer instanceof ArrayBuffer&&void 0!==i.byteLength))return console.warn("Data is not an instance of ArrayBuffer"),null;const r=t.createBuffer();return t.bindBuffer(e,r),t.bufferData(e,i,t.STATIC_DRAW),r}static createVAO(t,...e){if(!(t instanceof WebGL2RenderingContext))return;const i=t.createVertexArray();let r,s;t.bindVertexArray(i);for(let i of e)null!=i.loc&&null!=i.loc&&(t.enableVertexAttribArray(i.loc),r=i.dimension,s=t.FLOAT,t.bindBuffer(t.ARRAY_BUFFER,i.buffer),t.vertexAttribPointer(i.loc,r,s,!1,0,0));return i}}class c{_gl;position=[0,0,0];rotation=[0,0,0];scale=[1,1,1];static#t=0;#e=i();#i=[];#r=null;#s=null;_program=null;_primitive;#o;_vaoLoc;#n;#a;#h=!1;useDepthTest=!1;get modelMatrix(){return this.updateModelMatrix(),this.#e}addAttribute(t,e,i=4){if(!(e instanceof Array))throw new Error("The info parameter needs to be a Array.");e.forEach((t=>{if("number"!=typeof t)throw new Error("The info array need to be numeric.")}));const r=e.length/i;if(this.#o){if(r!==this.#o)throw new Error("The VBOs need to contain the same number of vertex.")}else this.#o=r;const s=new Float32Array(e);this.#i.push({loc:this._gl.getAttribLocation(this._program,t),buffer:h.createBuffer(this._gl,this._gl.ARRAY_BUFFER,s),dimension:i}),this.#h=!1}constructor(t,e,i,r){this._primitive=r,this._gl=t,this.#c(e,i)}#c(t,e){this.#r=h.createShader(this._gl,this._gl.VERTEX_SHADER,t),this.#s=h.createShader(this._gl,this._gl.FRAGMENT_SHADER,e),this._program=h.createProgram(this._gl,this.#r,this.#s),this._gl.useProgram(this._program)}#l(){this._vaoLoc=h.createVAO(this._gl,...this.#i)}updateModelMatrix(){var t,e,i,r,o,n,a,h,c,l,m,g,d,u,f,p,_,v;s(this.#e),t=this.#e,e=this.#e,p=(i=this.position)[0],_=i[1],v=i[2],e===t?(t[12]=e[0]*p+e[4]*_+e[8]*v+e[12],t[13]=e[1]*p+e[5]*_+e[9]*v+e[13],t[14]=e[2]*p+e[6]*_+e[10]*v+e[14],t[15]=e[3]*p+e[7]*_+e[11]*v+e[15]):(r=e[0],o=e[1],n=e[2],a=e[3],h=e[4],c=e[5],l=e[6],m=e[7],g=e[8],d=e[9],u=e[10],f=e[11],t[0]=r,t[1]=o,t[2]=n,t[3]=a,t[4]=h,t[5]=c,t[6]=l,t[7]=m,t[8]=g,t[9]=d,t[10]=u,t[11]=f,t[12]=r*p+h*_+g*v+e[12],t[13]=o*p+c*_+d*v+e[13],t[14]=n*p+l*_+u*v+e[14],t[15]=a*p+m*_+f*v+e[15]),function(t,e,i){var r=Math.sin(i),s=Math.cos(i),o=e[4],n=e[5],a=e[6],h=e[7],c=e[8],l=e[9],m=e[10],g=e[11];e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[4]=o*s+c*r,t[5]=n*s+l*r,t[6]=a*s+m*r,t[7]=h*s+g*r,t[8]=c*s-o*r,t[9]=l*s-n*r,t[10]=m*s-a*r,t[11]=g*s-h*r}(this.#e,this.#e,this.rotation[0]),function(t,e,i){var r=Math.sin(i),s=Math.cos(i),o=e[0],n=e[1],a=e[2],h=e[3],c=e[8],l=e[9],m=e[10],g=e[11];e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=o*s-c*r,t[1]=n*s-l*r,t[2]=a*s-m*r,t[3]=h*s-g*r,t[8]=o*r+c*s,t[9]=n*r+l*s,t[10]=a*r+m*s,t[11]=h*r+g*s}(this.#e,this.#e,this.rotation[1]),function(t,e,i){var r=Math.sin(i),s=Math.cos(i),o=e[0],n=e[1],a=e[2],h=e[3],c=e[4],l=e[5],m=e[6],g=e[7];e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=o*s+c*r,t[1]=n*s+l*r,t[2]=a*s+m*r,t[3]=h*s+g*r,t[4]=c*s-o*r,t[5]=l*s-n*r,t[6]=m*s-a*r,t[7]=g*s-h*r}(this.#e,this.#e,this.rotation[2]),function(t,e,i){var r=i[0],s=i[1],o=i[2];t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t[3]=e[3]*r,t[4]=e[4]*s,t[5]=e[5]*s,t[6]=e[6]*s,t[7]=e[7]*s,t[8]=e[8]*o,t[9]=e[9]*o,t[10]=e[10]*o,t[11]=e[11]*o,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]}(this.#e,this.#e,this.scale)}loadMVP(t){const e=this._gl.getUniformLocation(this._program,"model"),s=this._gl.getUniformLocation(this._program,"modelView"),o=this._gl.getUniformLocation(this._program,"mvp"),a=this._gl.getUniformLocation(this._program,"view"),h=this._gl.getUniformLocation(this._program,"viewProjection"),c=this._gl.getUniformLocation(this._program,"projection");if(e)this._gl.uniformMatrix4fv(e,!1,this.#e);else if(s){const e=i();t?n(e,t.viewMatrix,this.#e):r(e,this.#e),this._gl.uniformMatrix4fv(s,!1,e)}else if(o){const e=i();t?n(e,t.viewProjection,this.#e):r(e,this.#e),this._gl.uniformMatrix4fv(o,!1,e)}a&&this._gl.uniformMatrix4fv(e,!1,t.viewMatrix),c&&this._gl.uniformMatrix4fv(e,!1,t.projMatrix),h&&this._gl.uniformMatrix4fv(e,!1,t.viewProjection)}createTex(t,e){return this.#n=this._gl.getUniformLocation(this._program,e),this.#a=this._gl.createTexture(),this._gl.activeTexture(this._gl[`TEXTURE${c.#t}`]),this._gl.bindTexture(this._gl.TEXTURE_2D,this.#a),this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_WRAP_S,this._gl.CLAMP_TO_EDGE),this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_WRAP_T,this._gl.CLAMP_TO_EDGE),this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_MIN_FILTER,this._gl.NEAREST),this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_MAG_FILTER,this._gl.NEAREST),this._gl.texImage2D(this._gl.TEXTURE_2D,0,this._gl.RGBA32F,this._gl.RGBA,this._gl.FLOAT,t),this._gl.useProgram(this._program),this._gl.uniform1i(this.#n,c.#t),c.#t++,{tex:this.#a,index:c.#t-1}}setUniformValue(t,e,i){const r=this._gl.getUniformLocation(this._program,t);if(-1===r)throw new Error("This uniform doesn't exist in the shader code.");this._gl.useProgram(this._program),i.startsWith("Matrix")?this._gl["uniform"+i](r,!1,e):this._gl["uniform"+i](r,e)}draw(t){this.#h||(this.#h=!0,this.#l()),this._gl.frontFace(this._gl.CCW),this._gl.enable(this._gl.CULL_FACE),this._gl.cullFace(this._gl.BACK),this.useDepthTest&&(this._gl.enable(this._gl.DEPTH_TEST),this._gl.depthFunc(this._gl.LESS)),this.updateModelMatrix(),this._gl.bindVertexArray(this._vaoLoc),this._gl.useProgram(this._program),this.loadMVP(t),this._gl.drawArrays(this._primitive,0,this.#o),this._gl.disable(this._gl.CULL_FACE),this.useDepthTest&&this.gl.disable(this._gl.DEPTH_TEST)}static changeTex(t,{tex:e,index:i},r){t.bindTexture(t.TEXTURE_2D,e),t.texImage2D(t.TEXTURE_2D,0,t.RGBA32F,t.RGBA,t.FLOAT,r)}}a=new e(3),e!=Float32Array&&(a[0]=0,a[1]=0,a[2]=0);class l{#m;#g;#d;get width(){return this.#g}get height(){return this.#d}set scaleX(t){if(t<=0)throw new Error("the scale of a image need to be greater than 0");this.#m.scale[0]=t}set scaleY(t){if(t<=0)throw new Error("the scale of a image need to be greater than 0");this.#m.scale[1]=t}set positionX(t){this.#m.position[0]=t}set positionY(t){this.#m.position[1]=t}set depth(t){this.#m.position[2]=t}set rotation(t){this.#m.rotation[2]=t}set scale(t){if(!(t instanceof Array)||2!==t.length)throw new Error("scale need to be a vector with two positions.");this.#m.scale=function(t,i,r){var s=new e(3);return s[0]=t,s[1]=i,s[2]=1,s}(t[0],t[1])}set opacity(t){this.#m.setUniformValue("alpha",t,"1f")}async init(t,e){this.#m=new c(t,"#version 300 es\n    precision highp float;\n\n    uniform mat4 mvp;\n\n    in vec4 position;\n    in vec2 texCoord;\n\n    out vec2 fTexCoord;\n\n    void main() {\n        gl_Position  = mvp * position;\n        fTexCoord = texCoord;\n    }\n","#version 300 es\n    precision highp float;\n    \n    in vec2 fTexCoord;\n\n    uniform sampler2D uTexture;\n    uniform float alpha;\n\n    out vec4 color;\n\n    void main() {\n        color = texture(uTexture, fTexCoord);\n\n        if(color.a < 0.2) discard;\n\n        color *= alpha;\n    }\n",t.TRIANGLES);const i=await this.#u(e),r=this.#f(...i);this.#m.addAttribute("position",r.coords),this.#m.addAttribute("texCoord",r.texCoords,2),this.opacity=1}static async loadImage(t){return new Promise((e=>{const i=new Image;i.addEventListener("load",(()=>{e(i)})),i.src=t}))}async#u(t){const e=await l.loadImage(t);await e.decode();const i=await createImageBitmap(e);return this._tex=this.#m.createTex(e,"uTexture"),[i.width,i.height]}#f(t,e){const i=t/e;let r=1,s=1;i<1?r*=i:s/=i,this.#g=r,this.#d=s;const o=[-r,-s,0,1],n=[r,-s,0,1],a=[r,s,0,1],h=[-r,s,0,1];return{coords:[...o,...n,...a,...o,...a,...h],texCoords:[0,1,1,1,1,0,0,1,1,0,0,0]}}pointCollision(t,e,s){const a=i();r(a,this.#m.modelMatrix),s&&n(a,s.viewProjection,a);const h=i();o(h,a);const c=s?s.near:1,l=s?s.far:1,u=g(h,[t,e,c,1]),f=g(h,[t,e,l,1]),p=m(u,1/u[3]),_=m(f,1/f[3]),v=new d(_,p).pointWhenZIs(0);return Math.abs(v[0])<this.#g&&Math.abs(v[1])<this.#d}draw(t){this.#m&&this.#m.draw(t)}}function m(t,e){return t.map((t=>t*e))}function g(t,e){const i=new Array(e.length).fill(0);if(Math.round(e.length**2)===t.length){for(let r=0;r<e.length;r++)for(let s=0;s<t.length;s+=4)i[r]+=t[s+r]*e[s/4];return i}}class d{#p;#_;constructor(t,e){const i=this.#v(t,e);this.#_=i,this.#p=e}getPoint(t){return this.#p.map(((e,i)=>e+t*this.#_[i]))}pointWhenZIs(t){const e=this.#_[2]?(t-this.#p[2])/this.#_[2]:0;return this.getPoint(e)}#v(t,e){const i=t.map(((t,i)=>t-e[i])),r=Math.sqrt(i.reduce(((t,e)=>t+e**2),0));return r?i.map((t=>t/r)):i}}class u{attributes=new Map;id;hEdge;constructor(t){this.id=t}}class f{opositte;next;vertex;constructor(t){this.vertex=t}}class p{hEdge;constructor(t){this.hEdge=t}}class _{#w=[];#x=[];#M=[];constructor(t){for(let e=0;e<t.length;e+=3){const i=t[e],r=t[e+1],s=t[e+2];this.#x[i]||(this.#x[i]=new u(i)),this.#x[r]||(this.#x[r]=new u(r)),this.#x[s]||(this.#x[s]=new u(s));const o=new f(this.#x[i]),n=new f(this.#x[r]),a=new f(this.#x[s]);o.next=n,n.next=a,a.next=o;const h=new p(o);this.#w[e]=o,this.#w[e+1]=n,this.#w[e+2]=a,this.#M[Math.round(e/3)]=h}this.setOposittes()}setOposittes(){for(let t of this.#w){const e=t.vertex,i=t.next.vertex;if(e.hEdge||(e.hEdge=t),!t.opositte)for(let r of this.#w)if(r.vertex===i&&r.next.vertex===e){t.opositte=r,r.opositte=t;break}}}setAttribute(t,e,i){if(t.length/e!==this.#x.length)throw new Error(`Mesh haves ${this.#x.length} vertices, but only ${t.length/e} were given.`);for(let r=0;r<t.length;r+=e){const s=t.slice(r,r+e);this.#x[Math.round(r/e)].attributes.set(i,s)}}createVBOs(){const t=new Map,e=[];for(let e of this.#x)for(let i of e.attributes.keys())t.get(i)||t.set(i,[]),t.get(i).push(...e.attributes.get(i));for(let t of this.#w)e.push(t.vertex.id);return{attributes:t,indexes:e,count:this.#x.length}}}class v extends c{#E;#b=-1;#T;#h=!1;set border(t){this.#T=t}constructor(t,e,i,r){super(t,e,i,t.TRIANGLES),this.#E=new _(r)}addAttribute(t,e,i=4){if(!(e instanceof Array))throw new Error("The info parameter needs to be a Array.");if(e.forEach((t=>{if("number"!=typeof t)throw new Error("The info array need to be numeric.")})),-1===this._gl.getAttribLocation(this._program,t))throw new Error(`the attribute ${t} doesn't exists in the shader code.`);this.#E.setAttribute(e,i,t),this.#h=!1}#l(){const t=this.#E.createVBOs(),e=Array.from(t.attributes.entries()).map((e=>({loc:this._gl.getAttribLocation(this._program,e[0]),buffer:h.createBuffer(this._gl,this._gl.ARRAY_BUFFER,new Float32Array(e[1])),dimension:Math.round(e[1].length/t.count)})));this._vaoLoc=h.createVAO(this._gl,...e),this.#b=h.createBuffer(this._gl,this._gl.ELEMENT_ARRAY_BUFFER,new Uint32Array(t.indexes)),this._count=t.indexes.length,this.#h=!0}draw(t){this.#h||this.#l(),this.useDepthTest&&(this._gl.enable(this._gl.DEPTH_TEST),this._gl.depthFunc(this._gl.LESS)),this._gl.frontFace(this._gl.CCW),this._gl.enable(this._gl.CULL_FACE),this._gl.cullFace(this._gl.BACK),this._gl.bindVertexArray(this._vaoLoc),this._gl.useProgram(this._program),this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER,this.#b);const e=this._gl.getUniformLocation(this._program,"model"),r=this._gl.getUniformLocation(this._program,"modelView"),s=this._gl.getUniformLocation(this._program,"mvp");if(e)this._gl.uniformMatrix4fv(e,!1,this.modelMatrix);else if(r){const r=i();n(r,t.viewMatrix,this.modelMatrix),this._gl.uniformMatrix4fv(e,!1,r)}else if(s){const r=i();n(r,t.viewProjection,this.modelMatrix),this._gl.uniformMatrix4fv(e,!1,r)}this._gl.drawElements(this._primitive,this._count,this._gl.UNSIGNED_INT,0),this._gl.disable(this._gl.CULL_FACE),this.useDepthTest&&this._gl.disable(this._gl.DEPTH_TEST)}pointCollision(t,e,i){return!!this.#T&&this.#T.pointCollision(t,e,i,this)}get drawBorder(){return this.#T.draw()}static async loadMeshFromObj(t,e,i,r,s){const o=await fetch(t),n=await o.text(),a=new Map,h=n.split("\n"),c=[],m=[],g=[],d=[];let u=0;for(let t of h)if(t.startsWith("vn")){const e=t.replace("vn ","").split(" ").map(Number.parseFloat);m.push(...e,1);const i=Math.sqrt(w(e,e));if(Math.abs(w(e,[0,0,1])/i)<.5){const t=e.join(",");a.get(t)||a.set(t,u)}u++}else if(t.startsWith("vt")){const e=t.replace("vt ","").split(" ").map(Number.parseFloat);g.push(...e)}else if(t.startsWith("v")){const e=t.replace("v ","").split(" ").map(Number.parseFloat);c.push(...e,1)}else if(t.startsWith("f")){const e=t.replace("f ","").split(" ").map((t=>{const e=t.indexOf("/"),i=t.slice(0,e);return Number.parseInt(i)-1}));d.push(...e)}const f=new x(a,c,e),p=new v(e,i,r,d);if(p.addAttribute("position",c),p.addAttribute("normal",m),p.useDepthTest=!0,0!==g.length){if(!s)throw new Error("This mesh need to a texture path");p.addAttribute("texCoord",g,3);const t=await l.loadImage(s);p.createTex(t,"uTexture")}return p.border=f,p}}const w=(t,e)=>t.reduce(((t,i,r)=>t+i*e[r]),0);class x{#A;#C;#P;#y;#S;#L;constructor(t,e){this.#A=t,this.#C=e;let i=1/0,r=-1/0;for(let t=0;t<this.#C.length;t+=4)this.#C[t+2]<i&&(i=this.#C[t+2]),this.#C[t+2]>r&&(r=this.#C[t+2]);this.#S=i,this.#L=r}pointCollision(t,e,i,r){return this.#P=null,this.#y=null,this.#U(t,e,this.#S,i,r)||this.#U(t,e,this.#L,i,r)}#U(t,e,s,a,h){const c=i();r(c,h.modelMatrix),a&&n(c,a.viewProjection,c);const l=i();o(l,c);const m=a?a.near:1,g=a?a.far:1,d=x.multiplyMatWithVec(l,[t,e,m,1]),u=x.multiplyMatWithVec(l,[t,e,g,1]),f=x.scalarMulti(d,1/d[3]),p=x.scalarMulti(u,1/u[3]),_=new M(p,f).pointWhenZIs(s);return this.#P?this.#y=_:this.#P=_,this.#R(_)}#R(t){let e,i,r=0;for(let s of this.#A.entries()){const o=4*s[1],n=[this.#C[o],this.#C[o+1]];e?(this.leftToEdge(t,i,n)&&r++,i=n):(e=n,i=n)}return this.leftToEdge(t,i,e)&&r++,r%2==1}leftToEdge(t,e,i){const r=[i[1],e[1]];r.sort();const[s,o]=r;if(t[1]>=o||t[1]<s)return!1;const n=e[0]-i[0];if(!n)return t[0]<=e[0];const a=(e[1]-i[1])/n;if(!a)return!1;console.log("hmm");const h=e[0]-e[0]*a;return t[0]<(t[1]-h)/a}draw(){const t=document.createElement("canvas");t.width=1e3,t.height=1e3,t.style.backgroundColor="rgb(100, 0, 0)";const e=t.getContext("2d");let i;e.beginPath();for(let t of this.#A.entries()){const r=4*t[1],s=[this.#C[r],this.#C[r+1],this.#C[r+2]];i?e.lineTo(500*s[0]+250,500*(1-s[1])):(i=s,e.moveTo(500*s[0]+250,500*(1-s[1])))}return e.lineTo(500*i[0]+250,500*(1-i[1])),e.stroke(),this.#P&&e.fillRect(500*this.#P[0]+250,500*(1-this.#P[1]),5,5),this.#y&&e.fillRect(500*this.#y[0]+250,500*(1-this.#y[1]),5,5),t}static multiplyMatWithVec(t,e){const i=new Array(e.length).fill(0);if(Math.round(e.length**2)===t.length){for(let r=0;r<e.length;r++)for(let s=0;s<t.length;s+=4)i[r]+=t[s+r]*e[s/4];return i}}static scalarMulti(t,e){return t.map((t=>t*e))}}class M{#p;#_;constructor(t,e){const i=this.#v(t,e);this.#_=i,this.#p=e}getPoint(t){return this.#p.map(((e,i)=>e+t*this.#_[i]))}pointWhenZIs(t){const e=(t-this.#p[2])/this.#_[2];return this.getPoint(e)}#v(t,e){const i=t.map(((t,i)=>t-e[i])),r=Math.sqrt(i.reduce(((t,e)=>t+e**2),0));return i.map((t=>t/r))}}const E="#version 300 es\n    precision highp float;\n\n    uniform mat4 model;\n    uniform mat4 view;\n    uniform mat4 projection;\n    uniform vec4 color;\n\n    in vec4 position;\n    in vec4 normal;\n\n    out vec4 fPos;\n    out vec4 fColor;\n    out vec4 fNormal;\n\n    void main() {\n        gl_Position = (projection*view*model) * position;\n        gl_Position /= gl_Position.w;\n        fColor = color;\n        fPos = position;\n        fNormal = normal;\n    }\n",b="#version 300 es\n    precision highp float;\n    \n    uniform mat4 model;\n    uniform mat4 view;\n    uniform mat4 projection;\n\n    uniform vec3 amb_c;\n    uniform vec3 dif_c;\n    uniform vec3 esp_c;\n    uniform vec3 pos;\n    uniform float amb_k;\n    uniform float dif_k;\n    uniform float esp_k;\n    uniform float esp_p;\n\n    in vec4 fColor;\n    in vec4 normal;\n    in vec4 fPos;\n    in vec4 fNormal;\n\n    out vec4 color;\n\n    void main() {\n        mat4 modelView = view*model;\n\n        vec3 lightPos = (view * vec4(pos, 1.0)).xyz;\n        vec3 pos = -(modelView * fPos).xyz;\n\n        vec3 vNormal = normalize(inverse(transpose(modelView)) * fNormal).xyz;\n        vec3 vDistance = normalize(pos - lightPos);\n\n        vec3 normalPos = normalize(pos);\n\n        vec3 halfVector= normalize(vDistance + normalPos);\n\n        vec3 amb = amb_k * amb_c;\n\n        vec3 diff = max(dot(vNormal, vDistance), 0.0) * dif_k * dif_c;\n\n        vec3 spec = max(pow(dot(vNormal, halfVector), esp_p), 0.0) * esp_c * esp_k;\n\n        vec3 color3 = vec3(fColor);\n        \n        color3 = 0.5*color3 + 0.5*(diff + amb + spec);\n\n        color = vec4(color3, 1.0);\n    }\n";class T extends l{#V;async init(t,e=1e3){const i=document.createElement("canvas"),r=i.toDataURL("image/png");[i.width,i.height]=[e,e],await super.init(t,r),this.#V=i}async update(t=(()=>{}),e){t(this.#V.getContext("2d"));const i=this.#V.toDataURL("image/png"),r=await l.loadImage(i);c.changeTex(e,this._tex,r)}}class A{#F=i();#D=i();#j=i();camPosition=[0,0,1];lookDirection=[0,0,0];upDirection=[0,1,0];left=-4;right=4;bottom=-4;top=4;near=1;far=9;fovy=Math.PI/2;aspect;constructor(t){this.aspect=t.width/t.height}#I="perspective";set projectionType(t){if("orthogonal"!==t&&"perspective"!==t)throw new Error("Invalid type of projection.");this.#I=t}get viewMatrix(){return this.#k(),this.#F}get projMatrix(){return this.#B(),this.#D}#k(){s(this.#F),function(e,i,r,o){var n,a,h,c,l,m,g,d,u,f,p=i[0],_=i[1],v=i[2],w=o[0],x=o[1],M=o[2],E=r[0],b=r[1],T=r[2];Math.abs(p-E)<t&&Math.abs(_-b)<t&&Math.abs(v-T)<t?s(e):(g=p-E,d=_-b,u=v-T,n=x*(u*=f=1/Math.hypot(g,d,u))-M*(d*=f),a=M*(g*=f)-w*u,h=w*d-x*g,(f=Math.hypot(n,a,h))?(n*=f=1/f,a*=f,h*=f):(n=0,a=0,h=0),c=d*h-u*a,l=u*n-g*h,m=g*a-d*n,(f=Math.hypot(c,l,m))?(c*=f=1/f,l*=f,m*=f):(c=0,l=0,m=0),e[0]=n,e[1]=c,e[2]=g,e[3]=0,e[4]=a,e[5]=l,e[6]=d,e[7]=0,e[8]=h,e[9]=m,e[10]=u,e[11]=0,e[12]=-(n*p+a*_+h*v),e[13]=-(c*p+l*_+m*v),e[14]=-(g*p+d*_+u*v),e[15]=1)}(this.#F,this.camPosition,this.lookDirection,this.upDirection)}#B(){s(this.#D),"perspective"===this.#I?function(t,e,i,r,s){var o,n=1/Math.tan(e/2);t[0]=n/i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=s&&s!==1/0?(o=1/(r-s),t[10]=(s+r)*o,t[14]=2*s*r*o):(t[10]=-1,t[14]=-2*r)}(this.#D,this.fovy,this.aspect,this.near,this.far):function(t,e,i,r,s,o,n){var a=1/(e-i),h=1/(r-s),c=1/(o-n);t[0]=-2*a,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*h,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*c,t[11]=0,t[12]=(e+i)*a,t[13]=(s+r)*h,t[14]=(n+o)*c,t[15]=1}(this.#D,this.left*this.aspect,this.right*this.aspect,this.bottom,this.top,this.left,this.right)}get viewProjection(){return this.#k(),this.#B(),s(this.#j),n(this.#j,this.#D,this.#F),this.#j}}class C{ambColor=[0,0,0];ambK=3;difColor=[.3,.3,.3];difK=4;espColor=[1,1,1];espK=3;espExp=20;pos;constructor(t){this.pos=t}createUniforms(t){t.setUniformValue("amb_c",this.ambColor,"3fv"),t.setUniformValue("amb_k",this.ambK,"1f"),t.setUniformValue("dif_c",this.difColor,"3fv"),t.setUniformValue("dif_k",this.difK,"1f"),t.setUniformValue("esp_c",this.espColor,"3fv"),t.setUniformValue("esp_k",this.espK,"1f"),t.setUniformValue("esp_p",this.espExp,"1f")}}class P{#O=[];#N;#G;get camera(){return this.#G}constructor(t,e=[0,0,0,1]){if(t instanceof WebGL2RenderingContext){if(t.viewport(0,0,t.canvas.width,t.canvas.height),!e||!e.length||4!==e.length)throw new Error("The clear color need to be a array with 4 floats");t.clearColor(0,0,0,1),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),this.gl=t}}createCamera(t){this.#G=new A(t)}createLight(t){this.#N=new C(t)}appendElement(...t){t.forEach((t=>{if(!t.draw)throw new Error("Element need to have a draw function");this.#O.push(t),this.#N&&t instanceof c&&this.#N.createUniforms(t)}))}draw(){for(let t of this.#O)t.draw(this.#G)}}class y{#W;#X;#Y=!1;static async build(t){const e=new y;return await e.init(t),e}async init(t){this.gl=t.getContext("webgl2"),await this.#K(),await this.#z()}async#K(){this.#W=new P(this.gl);const t=new l;await t.init(this.gl,"./assets/menu/fundo.jpg");const e=new l;await e.init(this.gl,"./assets/menu/logo_war.png");const i=new l;await i.init(this.gl,"./assets/menu/play_button.png");const r=new l;await r.init(this.gl,"./assets/buttons/Group_17settings_button.png");const s=new l;await s.init(this.gl,"./assets/menu/max_button.png"),t.scaleY=1.85,e.scale=[.35,.56],i.scale=[.15,.26],r.scale=[.05,.08],s.scale=[.05,.08],e.positionY=.25,i.positionY=-.55,r.positionX=.9,r.positionY=.8,s.positionX=.9,s.positionY=.57,this.#W.appendElement(t,e,i,r,s),this.gl.canvas.addEventListener("click",(t=>{const e=y.mapClickInCanvas(t.clientX,t.clientY,this.gl.canvas);i.pointCollision(...e)&&(this.#Y=!0)}))}async#z(){const t=new l;await t.init(this.gl,"./assets/mapa.jpg"),t.scale=[2.7,2.7];const e=await v.loadMeshFromObj("./assets/meshes/brasil-rotacionado.obj",this.gl,E,b);e.scale=[1.2,1.2,1],e.position=[-0,-0,.3],e.rotation[1]=-.2;const i=await v.loadMeshFromObj("./assets/meshes/argentina.obj",this.gl,E,b);i.scale=[1.6,1.6,1.5],i.position=[-.21,-.35,.3],this.#X=new P(this.gl),this.#X.createCamera(S),this.#X.camera.camPosition[2]=1.8,this.#X.camera.camPosition[1]=-.3,this.#X.createLight([1,0,.3]);const r=new T;await r.init(this.gl),await r.update((t=>{t instanceof CanvasRenderingContext2D&&(t.fillStyle="white",t.ellipse(500,500,400,500,0,0,2*Math.PI),t.lineWidth=100,t.stroke(),t.font="600px Arial",t.fillText("1",320,600))}),this.gl),r.scale=[.1,.1],r.positionY=.2,this.#X.appendElement(t,e,i,r),e.setUniformValue("view",this.#X.camera.viewMatrix,"Matrix4fv"),e.setUniformValue("projection",this.#X.camera.projMatrix,"Matrix4fv"),e.setUniformValue("color",[1,0,0,1],"4fv"),i.setUniformValue("view",this.#X.camera.viewMatrix,"Matrix4fv"),i.setUniformValue("projection",this.#X.camera.projMatrix,"Matrix4fv"),i.setUniformValue("color",[0,0,1,1],"4fv"),this.gl.canvas.addEventListener("click",(t=>{if(!this.#Y)return;const r=y.mapClickInCanvas(t.clientX,t.clientY,this.gl.canvas);e.pointCollision(...r,this.#X.camera)&&alert("foi"),i.pointCollision(...r,this.#X.camera)&&alert("argentina")})),document.body.addEventListener("keydown",(t=>{"d"===t.key&&document.body.appendChild(e.drawBorder)}))}draw(){this.#Y?this.#X.draw():this.#W.draw()}run(){const t=()=>{this.draw(),requestAnimationFrame(t)};t()}static mapClickInCanvas(t,e,i){const r=[t-i.offsetLeft-i.width/2,i.height/2-(e-i.offsetTop)];return[2*r[0]/i.width,2*r[1]/i.height]}}const S=document.querySelector("#game-screen");y.build(S).then((t=>{t.run()}))})();
//# sourceMappingURL=main.bundle.js.map