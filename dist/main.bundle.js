(()=>{"use strict";var t=1e-6,e="undefined"!=typeof Float32Array?Float32Array:Array;function i(){var t=new e(16);return e!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function r(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function o(t,e,i){var r=e[0],o=e[1],a=e[2],s=e[3],n=e[4],h=e[5],l=e[6],c=e[7],u=e[8],g=e[9],d=e[10],m=e[11],f=e[12],p=e[13],x=e[14],w=e[15],T=i[0],E=i[1],M=i[2],v=i[3];return t[0]=T*r+E*n+M*u+v*f,t[1]=T*o+E*h+M*g+v*p,t[2]=T*a+E*l+M*d+v*x,t[3]=T*s+E*c+M*m+v*w,T=i[4],E=i[5],M=i[6],v=i[7],t[4]=T*r+E*n+M*u+v*f,t[5]=T*o+E*h+M*g+v*p,t[6]=T*a+E*l+M*d+v*x,t[7]=T*s+E*c+M*m+v*w,T=i[8],E=i[9],M=i[10],v=i[11],t[8]=T*r+E*n+M*u+v*f,t[9]=T*o+E*h+M*g+v*p,t[10]=T*a+E*l+M*d+v*x,t[11]=T*s+E*c+M*m+v*w,T=i[12],E=i[13],M=i[14],v=i[15],t[12]=T*r+E*n+M*u+v*f,t[13]=T*o+E*h+M*g+v*p,t[14]=T*a+E*l+M*d+v*x,t[15]=T*s+E*c+M*m+v*w,t}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});var a;class s{static createShader(t,e,i){const r=t.createShader(e);if(t.shaderSource(r,i),t.compileShader(r),!t.getShaderParameter(r,t.COMPILE_STATUS)){const e=t.getShaderInfoLog(r);throw new Error("Shader compilation error: "+e)}return r}static createProgram(t,e,i){const r=t.createProgram();if(t.attachShader(r,e),t.attachShader(r,i),t.linkProgram(r),!t.getProgramParameter(r,t.LINK_STATUS)){const e=t.getProgramInfoLog(r);throw new Error("Could not compile WebGL program:"+e)}return r}static createBuffer(t,e,i){if(0==i.length)return null;if(!(i&&i.buffer instanceof ArrayBuffer&&void 0!==i.byteLength))return console.warn("Data is not an instance of ArrayBuffer"),null;const r=t.createBuffer();return t.bindBuffer(e,r),t.bufferData(e,i,t.STATIC_DRAW),r}static createVAO(t,...e){if(!(t instanceof WebGL2RenderingContext))return;const i=t.createVertexArray();let r,o;t.bindVertexArray(i);for(let i of e)null!=i.loc&&null!=i.loc&&(t.enableVertexAttribArray(i.loc),r=i.dimension,o=t.FLOAT,t.bindBuffer(t.ARRAY_BUFFER,i.buffer),t.vertexAttribPointer(i.loc,r,o,!1,0,0));return i}}class n{#t;position=[0,0,0];rotation=[0,0,0];scale=[1,1,1];static#e=0;#i=i();#r=[];#o=null;#a=null;#s=null;#n;#h;#l;#c;#u;#g=!0;get modelMatrix(){return this.#d(),this.#i}set useModelMatrix(t){if(!(t instanceof Boolean))throw new Error("useModelMatrix need to be a boolean value");this.#g=t}addAttribute(t,e,i=4){if(!(e instanceof Array))throw new Error("The info parameter needs to be a Array.");e.forEach((t=>{if("number"!=typeof t)throw new Error("The info array need to be numeric.")}));const r=e.length/i;if(this.#h){if(r!==this.#h)throw new Error("The VBOs need to contain the same number of vertex.")}else this.#h=r;const o=new Float32Array(e);this.#r.push({loc:this.#t.getAttribLocation(this.#s,t),buffer:s.createBuffer(this.#t,this.#t.ARRAY_BUFFER,o),dimension:i})}constructor(t,e,i,r){this.#n=r,this.#t=t,this.createShader(e,i)}createShader(t,e){this.#o=s.createShader(this.#t,this.#t.VERTEX_SHADER,t),this.#a=s.createShader(this.#t,this.#t.FRAGMENT_SHADER,e),this.#s=s.createProgram(this.#t,this.#o,this.#a),this.#t.useProgram(this.#s)}createVAO(){this.#l=s.createVAO(this.#t,...this.#r)}#d(){var t,e,i,o,a,s,n,h,l,c,u,g,d,m,f,p,x,w;r(this.#i),t=this.#i,e=this.#i,p=(i=this.position)[0],x=i[1],w=i[2],e===t?(t[12]=e[0]*p+e[4]*x+e[8]*w+e[12],t[13]=e[1]*p+e[5]*x+e[9]*w+e[13],t[14]=e[2]*p+e[6]*x+e[10]*w+e[14],t[15]=e[3]*p+e[7]*x+e[11]*w+e[15]):(o=e[0],a=e[1],s=e[2],n=e[3],h=e[4],l=e[5],c=e[6],u=e[7],g=e[8],d=e[9],m=e[10],f=e[11],t[0]=o,t[1]=a,t[2]=s,t[3]=n,t[4]=h,t[5]=l,t[6]=c,t[7]=u,t[8]=g,t[9]=d,t[10]=m,t[11]=f,t[12]=o*p+h*x+g*w+e[12],t[13]=a*p+l*x+d*w+e[13],t[14]=s*p+c*x+m*w+e[14],t[15]=n*p+u*x+f*w+e[15]),function(t,e,i){var r=Math.sin(i),o=Math.cos(i),a=e[4],s=e[5],n=e[6],h=e[7],l=e[8],c=e[9],u=e[10],g=e[11];e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[4]=a*o+l*r,t[5]=s*o+c*r,t[6]=n*o+u*r,t[7]=h*o+g*r,t[8]=l*o-a*r,t[9]=c*o-s*r,t[10]=u*o-n*r,t[11]=g*o-h*r}(this.#i,this.#i,this.rotation[0]),function(t,e,i){var r=Math.sin(i),o=Math.cos(i),a=e[0],s=e[1],n=e[2],h=e[3],l=e[8],c=e[9],u=e[10],g=e[11];e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=a*o-l*r,t[1]=s*o-c*r,t[2]=n*o-u*r,t[3]=h*o-g*r,t[8]=a*r+l*o,t[9]=s*r+c*o,t[10]=n*r+u*o,t[11]=h*r+g*o}(this.#i,this.#i,this.rotation[1]),function(t,e,i){var r=Math.sin(i),o=Math.cos(i),a=e[0],s=e[1],n=e[2],h=e[3],l=e[4],c=e[5],u=e[6],g=e[7];e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=a*o+l*r,t[1]=s*o+c*r,t[2]=n*o+u*r,t[3]=h*o+g*r,t[4]=l*o-a*r,t[5]=c*o-s*r,t[6]=u*o-n*r,t[7]=g*o-h*r}(this.#i,this.#i,this.rotation[2]),function(t,e,i){var r=i[0],o=i[1],a=i[2];t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t[3]=e[3]*r,t[4]=e[4]*o,t[5]=e[5]*o,t[6]=e[6]*o,t[7]=e[7]*o,t[8]=e[8]*a,t[9]=e[9]*a,t[10]=e[10]*a,t[11]=e[11]*a,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]}(this.#i,this.#i,this.scale)}createTex(t,e){this.#c=this.#t.getUniformLocation(this.#s,e),this.#u=this.#t.createTexture(),this.#t.activeTexture(this.#t[`TEXTURE${n.#e}`]),this.#t.bindTexture(this.#t.TEXTURE_2D,this.#u),this.#t.texParameteri(this.#t.TEXTURE_2D,this.#t.TEXTURE_WRAP_S,this.#t.CLAMP_TO_EDGE),this.#t.texParameteri(this.#t.TEXTURE_2D,this.#t.TEXTURE_WRAP_T,this.#t.CLAMP_TO_EDGE),this.#t.texParameteri(this.#t.TEXTURE_2D,this.#t.TEXTURE_MIN_FILTER,this.#t.NEAREST),this.#t.texParameteri(this.#t.TEXTURE_2D,this.#t.TEXTURE_MAG_FILTER,this.#t.NEAREST),this.#t.texImage2D(this.#t.TEXTURE_2D,0,this.#t.RGBA32F,this.#t.RGBA,this.#t.FLOAT,t),this.#t.useProgram(this.#s),this.#t.uniform1i(this.#c,n.#e),n.#e++}setUniformValue(t,e,i){const r=this.#t.getUniformLocation(this.#s,t);if(-1===r)throw new Error("This uniform doesn't exist in the shader code.");this.#t.useProgram(this.#s),this.#t["uniform"+i](r,e)}draw(t){this.#t.frontFace(this.#t.CCW),this.#t.enable(this.#t.CULL_FACE),this.#t.cullFace(this.#t.BACK),this.#d(),this.#t.bindVertexArray(this.#l);const e=this.#g?this.#i:i();t&&o(e,t.viewProjection,e),this.#t.useProgram(this.#s);const r=this.#t.getUniformLocation(this.#s,"mvp");-1!==e&&this.#t.uniformMatrix4fv(r,!1,e),this.#t.drawArrays(this.#n,0,this.#h),this.#t.disable(this.#t.CULL_FACE)}}a=new e(3),e!=Float32Array&&(a[0]=0,a[1]=0,a[2]=0);class h{#m;#f;#p;set scaleX(t){if(t<=0)throw new Error("the scale of a image need to be greater than 0");this.#m.scale[0]=t}set scaleY(t){if(t<=0)throw new Error("the scale of a image need to be greater than 0");this.#m.scale[1]=t}set positionX(t){this.#m.position[0]=t}set positionY(t){this.#m.position[1]=t}set depth(t){this.#m.position[2]=t}set rotation(t){this.#m.rotation[2]=t}set scale(t){if(!(t instanceof Array)||2!==t.length)throw new Error("scale need to be a vector with two positions.");this.#m.scale=function(t,i,r){var o=new e(3);return o[0]=t,o[1]=i,o[2]=1,o}(t[0],t[1])}set opacity(t){this.#m.setUniformValue("alpha",t,"1f")}async init(t,e){this.#m=new n(t,"#version 300 es\n    precision highp float;\n\n    uniform mat4 mvp;\n\n    in vec4 position;\n    in vec2 texCoord;\n\n    out vec2 fTexCoord;\n\n    void main() {\n        gl_Position  = mvp * position;\n        fTexCoord = texCoord;\n    }\n","#version 300 es\n    precision highp float;\n    \n    in vec2 fTexCoord;\n\n    uniform sampler2D uTexture;\n    uniform float alpha;\n\n    out vec4 color;\n\n\n\n    void main() {\n        color = texture(uTexture, fTexCoord);\n\n        if(color.a < 0.5) discard;\n\n        color *= alpha;\n    }\n",t.TRIANGLES);const i=await this.#x(e),r=this.#w(...i);this.#m.addAttribute("position",r.coords),this.#m.addAttribute("texCoord",r.texCoords,2),this.#m.createVAO(),this.opacity=1}async loadImage(t){return new Promise((e=>{const i=new Image;i.addEventListener("load",(()=>{e(i)})),i.src=t}))}async#x(t){const e=await this.loadImage(t);await e.decode();const i=await createImageBitmap(e);return this.#m.createTex(e,"uTexture"),[i.width,i.height]}#w(t,e){const i=t/e;let r=1,o=1;i<1?r*=i:o/=i,this.#f=r,this.#p=o;const a=[-r,-o,0,1],s=[r,-o,0,1],n=[r,o,0,1],h=[-r,o,0,1];return{coords:[...a,...s,...n,...a,...n,...h],texCoords:[0,1,1,1,1,0,0,1,1,0,0,0]}}pointCollision(t,e,r){const a=[t,e,0,1],s=i();(function(t,e){t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]})(s,this.#m.modelMatrix),r&&o(s,r.viewProjection,s);const n=i();!function(t,e){var i=e[0],r=e[1],o=e[2],a=e[3],s=e[4],n=e[5],h=e[6],l=e[7],c=e[8],u=e[9],g=e[10],d=e[11],m=e[12],f=e[13],p=e[14],x=e[15],w=i*n-r*s,T=i*h-o*s,E=i*l-a*s,M=r*h-o*n,v=r*l-a*n,A=o*l-a*h,_=c*f-u*m,b=c*p-g*m,P=c*x-d*m,y=u*p-g*f,S=u*x-d*f,R=g*x-d*p,L=w*R-T*S+E*y+M*P-v*b+A*_;L&&(L=1/L,t[0]=(n*R-h*S+l*y)*L,t[1]=(o*S-r*R-a*y)*L,t[2]=(f*A-p*v+x*M)*L,t[3]=(g*v-u*A-d*M)*L,t[4]=(h*P-s*R-l*b)*L,t[5]=(i*R-o*P+a*b)*L,t[6]=(p*E-m*A-x*T)*L,t[7]=(c*A-g*E+d*T)*L,t[8]=(s*S-n*P+l*_)*L,t[9]=(r*P-i*S-a*_)*L,t[10]=(m*v-f*E+x*w)*L,t[11]=(u*E-c*v-d*w)*L,t[12]=(n*b-s*y-h*_)*L,t[13]=(i*y-r*b+o*_)*L,t[14]=(f*T-m*M-p*w)*L,t[15]=(c*M-u*T+g*w)*L)}(n,s);const h=function(t,e){const i=new Array(e.length).fill(0);if(Math.round(e.length**2)===t.length){for(let r=0;r<e.length;r++)for(let o=0;o<t.length;o+=4)i[r]+=t[o+r]*e[o/4];return i}}(n,a);return Math.abs(h[0])<this.#f&&Math.abs(h[1])<this.#p}draw(t){this.#m&&this.#m.draw(t)}}class l{#T=i();#E=i();#M=i();camPosition=[0,0,1];lookDirection=[0,0,0];upDirection=[0,1,0];left=-4;right=4;bottom=-4;top=4;near=1;far=9;fovy=Math.PI/1.3;aspect;constructor(t){this.aspect=t.width/t.height}#v="perspective";set projectionType(t){if("orthogonal"!==t&&"perspective"!==t)throw new Error("Invalid type of projection.");this.typeOfProjection=t}get viewMatrix(){return this.#A(),this.#T}get projMatrix(){return this.#_(),this.#E}#A(){r(this.#T),function(e,i,o,a){var s,n,h,l,c,u,g,d,m,f,p=i[0],x=i[1],w=i[2],T=a[0],E=a[1],M=a[2],v=o[0],A=o[1],_=o[2];Math.abs(p-v)<t&&Math.abs(x-A)<t&&Math.abs(w-_)<t?r(e):(g=p-v,d=x-A,m=w-_,s=E*(m*=f=1/Math.hypot(g,d,m))-M*(d*=f),n=M*(g*=f)-T*m,h=T*d-E*g,(f=Math.hypot(s,n,h))?(s*=f=1/f,n*=f,h*=f):(s=0,n=0,h=0),l=d*h-m*n,c=m*s-g*h,u=g*n-d*s,(f=Math.hypot(l,c,u))?(l*=f=1/f,c*=f,u*=f):(l=0,c=0,u=0),e[0]=s,e[1]=l,e[2]=g,e[3]=0,e[4]=n,e[5]=c,e[6]=d,e[7]=0,e[8]=h,e[9]=u,e[10]=m,e[11]=0,e[12]=-(s*p+n*x+h*w),e[13]=-(l*p+c*x+u*w),e[14]=-(g*p+d*x+m*w),e[15]=1)}(this.#T,this.camPosition,this.lookDirection,this.upDirection)}#_(){r(this.#E),"perspective"==this.typeOfProjection?function(t,e,i,r,o){var a,s=1/Math.tan(e/2);t[0]=s/i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=s,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=o&&o!==1/0?(a=1/(r-o),t[10]=(o+r)*a,t[14]=2*o*r*a):(t[10]=-1,t[14]=-2*r)}(this.#E,this.fovy,this.aspect,this.near,this.far):function(t,e,i,r,o,a,s){var n=1/(e-i),h=1/(r-o),l=1/(a-s);t[0]=-2*n,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*h,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*l,t[11]=0,t[12]=(e+i)*n,t[13]=(o+r)*h,t[14]=(s+a)*l,t[15]=1}(this.#E,this.left,this.right,this.bottom,this.top,this.left,this.right)}get viewProjection(){return this.#A(),this.#_(),r(this.#M),o(this.#M,this.#E,this.#T),this.#M}}const c=document.querySelector("#game-screen");let u=0;const g=c.getContext("webgl2");g.viewport(0,0,g.canvas.width,g.canvas.height),g.clearColor(0,0,0,1),g.clear(g.COLOR_BUFFER_BIT|g.DEPTH_BUFFER_BIT),async function(t){const e=new h;await e.init(t,"./assets/menu/fundo.jpg");const i=new h;await i.init(t,"./assets/menu/logo_war.png");const r=new h;await r.init(t,"./assets/menu/play_button.png");const o=new h;await o.init(t,"./assets/menu/settings_button.png");const a=new h;await a.init(t,"./assets/menu/max_button.png"),e.scale=[4,7.3],i.scale=[1.35,1.6],r.scale=[.15,.26],o.scale=[.05,.08],a.scale=[.05,.08],i.positionY=.25,r.positionY=-.55,o.positionX=.9,o.positionY=.8,a.positionX=.9,a.positionY=.57;const s=new l(t.canvas);t.enable(t.DEPTH_TEST),t.depthFunc(t.LESS),i.draw(s),r.draw(s),o.draw(s),a.draw(s),e.draw(s),t.disable(t.DEPTH_TEST),c.addEventListener("click",(e=>{const i=function(t,e,i){const r=[t-i.offsetLeft-i.width/2,i.height/2-(e-i.offsetTop)];return[2*r[0]/i.width,2*r[1]/i.height]}(e.clientX,e.clientY,c);r.pointCollision(...i,s)&&(u=1,async function(t){const e=new h;await e.init(t,"./assets/mapa.jpg"),e.scale=[4,7.4];let i=!1;const r=new l(c);t.enable(t.DEPTH_TEST),t.depthFunc(t.LESS),e.draw(r),t.disable(t.DEPTH_TEST);let o=0,a=0;c.addEventListener("mousedown",(t=>{o=t.clientX,a=t.clientY,i=!0})),c.addEventListener("mouseup",(t=>{i=!1,console.log(o,a)})),c.addEventListener("mousemove",(t=>{if(i){let e=t.clientX-o,i=t.clientY-a;console.log(e,i)}}))}(t))}))}(g)})();
//# sourceMappingURL=main.bundle.js.map