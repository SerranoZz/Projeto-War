(()=>{"use strict";var t=1e-6,e="undefined"!=typeof Float32Array?Float32Array:Array;function i(){var t=new e(16);return e!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function s(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function r(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function o(t,e){var i=e[0],s=e[1],r=e[2],o=e[3],n=e[4],a=e[5],h=e[6],l=e[7],c=e[8],m=e[9],g=e[10],d=e[11],f=e[12],u=e[13],p=e[14],_=e[15],v=i*a-s*n,x=i*h-r*n,w=i*l-o*n,E=s*h-r*a,M=s*l-o*a,b=r*l-o*h,T=c*u-m*f,A=c*p-g*f,C=c*_-d*f,P=m*p-g*u,y=m*_-d*u,S=g*_-d*p,L=v*S-x*y+w*P+E*C-M*A+b*T;return L?(L=1/L,t[0]=(a*S-h*y+l*P)*L,t[1]=(r*y-s*S-o*P)*L,t[2]=(u*b-p*M+_*E)*L,t[3]=(g*M-m*b-d*E)*L,t[4]=(h*C-n*S-l*A)*L,t[5]=(i*S-r*C+o*A)*L,t[6]=(p*w-f*b-_*x)*L,t[7]=(c*b-g*w+d*x)*L,t[8]=(n*y-a*C+l*T)*L,t[9]=(s*C-i*y-o*T)*L,t[10]=(f*M-u*w+_*v)*L,t[11]=(m*w-c*M-d*v)*L,t[12]=(a*A-n*P-h*T)*L,t[13]=(i*P-s*A+r*T)*L,t[14]=(u*x-f*E-p*v)*L,t[15]=(c*E-m*x+g*v)*L,t):null}function n(t,e,i){var s=e[0],r=e[1],o=e[2],n=e[3],a=e[4],h=e[5],l=e[6],c=e[7],m=e[8],g=e[9],d=e[10],f=e[11],u=e[12],p=e[13],_=e[14],v=e[15],x=i[0],w=i[1],E=i[2],M=i[3];return t[0]=x*s+w*a+E*m+M*u,t[1]=x*r+w*h+E*g+M*p,t[2]=x*o+w*l+E*d+M*_,t[3]=x*n+w*c+E*f+M*v,x=i[4],w=i[5],E=i[6],M=i[7],t[4]=x*s+w*a+E*m+M*u,t[5]=x*r+w*h+E*g+M*p,t[6]=x*o+w*l+E*d+M*_,t[7]=x*n+w*c+E*f+M*v,x=i[8],w=i[9],E=i[10],M=i[11],t[8]=x*s+w*a+E*m+M*u,t[9]=x*r+w*h+E*g+M*p,t[10]=x*o+w*l+E*d+M*_,t[11]=x*n+w*c+E*f+M*v,x=i[12],w=i[13],E=i[14],M=i[15],t[12]=x*s+w*a+E*m+M*u,t[13]=x*r+w*h+E*g+M*p,t[14]=x*o+w*l+E*d+M*_,t[15]=x*n+w*c+E*f+M*v,t}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});var a;class h{static createShader(t,e,i){const s=t.createShader(e);if(t.shaderSource(s,i),t.compileShader(s),!t.getShaderParameter(s,t.COMPILE_STATUS)){const e=t.getShaderInfoLog(s);throw new Error("Shader compilation error: "+e)}return s}static createProgram(t,e,i){const s=t.createProgram();if(t.attachShader(s,e),t.attachShader(s,i),t.linkProgram(s),!t.getProgramParameter(s,t.LINK_STATUS)){const e=t.getProgramInfoLog(s);throw new Error("Could not compile WebGL program:"+e)}return s}static createBuffer(t,e,i){if(0==i.length)return null;if(!(i&&i.buffer instanceof ArrayBuffer&&void 0!==i.byteLength))return console.warn("Data is not an instance of ArrayBuffer"),null;const s=t.createBuffer();return t.bindBuffer(e,s),t.bufferData(e,i,t.STATIC_DRAW),s}static createVAO(t,...e){if(!(t instanceof WebGL2RenderingContext))return;const i=t.createVertexArray();let s,r;t.bindVertexArray(i);for(let i of e)null!=i.loc&&null!=i.loc&&(t.enableVertexAttribArray(i.loc),s=i.dimension,r=t.FLOAT,t.bindBuffer(t.ARRAY_BUFFER,i.buffer),t.vertexAttribPointer(i.loc,s,r,!1,0,0));return i}}class l{_gl;position=[0,0,0];rotation=[0,0,0];scale=[1,1,1];static#t=0;#e=i();#i=[];#s=null;#r=null;_program=null;_primitive;#o;_vaoLoc;#n;#a;#h=!1;useDepthTest=!1;get modelMatrix(){return this.updateModelMatrix(),this.#e}addAttribute(t,e,i=4){if(!(e instanceof Array))throw new Error("The info parameter needs to be a Array.");e.forEach((t=>{if("number"!=typeof t)throw new Error("The info array need to be numeric.")}));const s=e.length/i;if(this.#o){if(s!==this.#o)throw new Error("The VBOs need to contain the same number of vertex.")}else this.#o=s;const r=new Float32Array(e);this.#i.push({loc:this._gl.getAttribLocation(this._program,t),buffer:h.createBuffer(this._gl,this._gl.ARRAY_BUFFER,r),dimension:i}),this.#h=!1}constructor(t,e,i,s){this._primitive=s,this._gl=t,this.#l(e,i)}#l(t,e){this.#s=h.createShader(this._gl,this._gl.VERTEX_SHADER,t),this.#r=h.createShader(this._gl,this._gl.FRAGMENT_SHADER,e),this._program=h.createProgram(this._gl,this.#s,this.#r),this._gl.useProgram(this._program)}#c(){this._vaoLoc=h.createVAO(this._gl,...this.#i)}updateModelMatrix(){var t,e,i,s,o,n,a,h,l,c,m,g,d,f,u,p,_,v;r(this.#e),t=this.#e,e=this.#e,p=(i=this.position)[0],_=i[1],v=i[2],e===t?(t[12]=e[0]*p+e[4]*_+e[8]*v+e[12],t[13]=e[1]*p+e[5]*_+e[9]*v+e[13],t[14]=e[2]*p+e[6]*_+e[10]*v+e[14],t[15]=e[3]*p+e[7]*_+e[11]*v+e[15]):(s=e[0],o=e[1],n=e[2],a=e[3],h=e[4],l=e[5],c=e[6],m=e[7],g=e[8],d=e[9],f=e[10],u=e[11],t[0]=s,t[1]=o,t[2]=n,t[3]=a,t[4]=h,t[5]=l,t[6]=c,t[7]=m,t[8]=g,t[9]=d,t[10]=f,t[11]=u,t[12]=s*p+h*_+g*v+e[12],t[13]=o*p+l*_+d*v+e[13],t[14]=n*p+c*_+f*v+e[14],t[15]=a*p+m*_+u*v+e[15]),function(t,e,i){var s=Math.sin(i),r=Math.cos(i),o=e[4],n=e[5],a=e[6],h=e[7],l=e[8],c=e[9],m=e[10],g=e[11];e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[4]=o*r+l*s,t[5]=n*r+c*s,t[6]=a*r+m*s,t[7]=h*r+g*s,t[8]=l*r-o*s,t[9]=c*r-n*s,t[10]=m*r-a*s,t[11]=g*r-h*s}(this.#e,this.#e,this.rotation[0]),function(t,e,i){var s=Math.sin(i),r=Math.cos(i),o=e[0],n=e[1],a=e[2],h=e[3],l=e[8],c=e[9],m=e[10],g=e[11];e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=o*r-l*s,t[1]=n*r-c*s,t[2]=a*r-m*s,t[3]=h*r-g*s,t[8]=o*s+l*r,t[9]=n*s+c*r,t[10]=a*s+m*r,t[11]=h*s+g*r}(this.#e,this.#e,this.rotation[1]),function(t,e,i){var s=Math.sin(i),r=Math.cos(i),o=e[0],n=e[1],a=e[2],h=e[3],l=e[4],c=e[5],m=e[6],g=e[7];e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=o*r+l*s,t[1]=n*r+c*s,t[2]=a*r+m*s,t[3]=h*r+g*s,t[4]=l*r-o*s,t[5]=c*r-n*s,t[6]=m*r-a*s,t[7]=g*r-h*s}(this.#e,this.#e,this.rotation[2]),function(t,e,i){var s=i[0],r=i[1],o=i[2];t[0]=e[0]*s,t[1]=e[1]*s,t[2]=e[2]*s,t[3]=e[3]*s,t[4]=e[4]*r,t[5]=e[5]*r,t[6]=e[6]*r,t[7]=e[7]*r,t[8]=e[8]*o,t[9]=e[9]*o,t[10]=e[10]*o,t[11]=e[11]*o,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]}(this.#e,this.#e,this.scale)}loadMVP(t){const e=this._gl.getUniformLocation(this._program,"model"),r=this._gl.getUniformLocation(this._program,"modelView"),o=this._gl.getUniformLocation(this._program,"mvp"),a=this._gl.getUniformLocation(this._program,"view"),h=this._gl.getUniformLocation(this._program,"viewProjection"),l=this._gl.getUniformLocation(this._program,"projection");if(e)this._gl.uniformMatrix4fv(e,!1,this.#e);else if(r){const e=i();t?n(e,t.viewMatrix,this.#e):s(e,this.#e),this._gl.uniformMatrix4fv(r,!1,e)}else if(o){const e=i();t?n(e,t.viewProjection,this.#e):s(e,this.#e),this._gl.uniformMatrix4fv(o,!1,e)}a&&this._gl.uniformMatrix4fv(e,!1,t.viewMatrix),l&&this._gl.uniformMatrix4fv(e,!1,t.projMatrix),h&&this._gl.uniformMatrix4fv(e,!1,t.viewProjection)}createTex(t,e){return this.#n=this._gl.getUniformLocation(this._program,e),this.#a=this._gl.createTexture(),this._gl.activeTexture(this._gl[`TEXTURE${l.#t}`]),this._gl.bindTexture(this._gl.TEXTURE_2D,this.#a),this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_WRAP_S,this._gl.CLAMP_TO_EDGE),this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_WRAP_T,this._gl.CLAMP_TO_EDGE),this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_MIN_FILTER,this._gl.NEAREST),this._gl.texParameteri(this._gl.TEXTURE_2D,this._gl.TEXTURE_MAG_FILTER,this._gl.NEAREST),this._gl.texImage2D(this._gl.TEXTURE_2D,0,this._gl.RGBA32F,this._gl.RGBA,this._gl.FLOAT,t),this._gl.useProgram(this._program),this._gl.uniform1i(this.#n,l.#t),l.#t++,{tex:this.#a,index:l.#t-1}}setUniformValue(t,e,i){const s=this._gl.getUniformLocation(this._program,t);if(-1===s)throw new Error("This uniform doesn't exist in the shader code.");this._gl.useProgram(this._program),i.startsWith("Matrix")?this._gl["uniform"+i](s,!1,e):this._gl["uniform"+i](s,e)}draw(t){this.#h||(this.#h=!0,this.#c()),this._gl.frontFace(this._gl.CCW),this._gl.enable(this._gl.CULL_FACE),this._gl.cullFace(this._gl.BACK),this.useDepthTest&&(this._gl.enable(this._gl.DEPTH_TEST),this._gl.depthFunc(this._gl.LESS)),this.updateModelMatrix(),this._gl.bindVertexArray(this._vaoLoc),this._gl.useProgram(this._program),this.loadMVP(t),this._gl.drawArrays(this._primitive,0,this.#o),this._gl.disable(this._gl.CULL_FACE),this.useDepthTest&&this.gl.disable(this._gl.DEPTH_TEST)}static changeTex(t,{tex:e,index:i},s){t.bindTexture(t.TEXTURE_2D,e),t.texImage2D(t.TEXTURE_2D,0,t.RGBA32F,t.RGBA,t.FLOAT,s)}}a=new e(3),e!=Float32Array&&(a[0]=0,a[1]=0,a[2]=0);class c{#m;#g;#d;set scaleX(t){if(t<=0)throw new Error("the scale of a image need to be greater than 0");this.#m.scale[0]=t}set scaleY(t){if(t<=0)throw new Error("the scale of a image need to be greater than 0");this.#m.scale[1]=t}set positionX(t){this.#m.position[0]=t}set positionY(t){this.#m.position[1]=t}set depth(t){this.#m.position[2]=t}set rotation(t){this.#m.rotation[2]=t}set scale(t){if(!(t instanceof Array)||2!==t.length)throw new Error("scale need to be a vector with two positions.");this.#m.scale=function(t,i,s){var r=new e(3);return r[0]=t,r[1]=i,r[2]=1,r}(t[0],t[1])}set opacity(t){this.#m.setUniformValue("alpha",t,"1f")}async init(t,e){this.#m=new l(t,"#version 300 es\n    precision highp float;\n\n    uniform mat4 mvp;\n\n    in vec4 position;\n    in vec2 texCoord;\n\n    out vec2 fTexCoord;\n\n    void main() {\n        gl_Position  = mvp * position;\n        fTexCoord = texCoord;\n    }\n","#version 300 es\n    precision highp float;\n    \n    in vec2 fTexCoord;\n\n    uniform sampler2D uTexture;\n    uniform float alpha;\n\n    out vec4 color;\n\n    void main() {\n        color = texture(uTexture, fTexCoord);\n\n        if(color.a < 0.2) discard;\n\n        color *= alpha;\n    }\n",t.TRIANGLES);const i=await this.#f(e),s=this.#u(...i);this.#m.addAttribute("position",s.coords),this.#m.addAttribute("texCoord",s.texCoords,2),this.opacity=1}static async loadImage(t){return new Promise((e=>{const i=new Image;i.addEventListener("load",(()=>{e(i)})),i.src=t}))}async#f(t){const e=await c.loadImage(t);await e.decode();const i=await createImageBitmap(e);return this._tex=this.#m.createTex(e,"uTexture"),[i.width,i.height]}#u(t,e){const i=t/e;let s=1,r=1;i<1?s*=i:r/=i,this.#g=s,this.#d=r;const o=[-s,-r,0,1],n=[s,-r,0,1],a=[s,r,0,1],h=[-s,r,0,1];return{coords:[...o,...n,...a,...o,...a,...h],texCoords:[0,1,1,1,1,0,0,1,1,0,0,0]}}pointCollision(t,e,r){const a=[t,e,0,1],h=i();s(h,this.#m.modelMatrix),r&&n(h,r.viewProjection,h);const l=i();o(l,h);const c=function(t,e){const i=new Array(e.length).fill(0);if(Math.round(e.length**2)===t.length){for(let s=0;s<e.length;s++)for(let r=0;r<t.length;r+=4)i[s]+=t[r+s]*e[r/4];return i}}(l,a);return Math.abs(c[0])<this.#g&&Math.abs(c[1])<this.#d}draw(t){this.#m&&this.#m.draw(t)}}class m{attributes=new Map;id;hEdge;constructor(t){this.id=t}}class g{opositte;next;vertex;constructor(t){this.vertex=t}}class d{hEdge;constructor(t){this.hEdge=t}}class f{#p=[];#_=[];#v=[];constructor(t){for(let e=0;e<t.length;e+=3){const i=t[e],s=t[e+1],r=t[e+2];this.#_[i]||(this.#_[i]=new m(i)),this.#_[s]||(this.#_[s]=new m(s)),this.#_[r]||(this.#_[r]=new m(r));const o=new g(this.#_[i]),n=new g(this.#_[s]),a=new g(this.#_[r]);o.next=n,n.next=a,a.next=o;const h=new d(o);this.#p[e]=o,this.#p[e+1]=n,this.#p[e+2]=a,this.#v[Math.round(e/3)]=h}this.setOposittes()}setOposittes(){for(let t of this.#p){const e=t.vertex,i=t.next.vertex;if(e.hEdge||(e.hEdge=t),!t.opositte)for(let s of this.#p)if(s.vertex===i&&s.next.vertex===e){t.opositte=s,s.opositte=t;break}}}setAttribute(t,e,i){if(t.length/e!==this.#_.length)throw new Error(`Mesh haves ${this.#_.length} vertices, but only ${t.length/e} were given.`);for(let s=0;s<t.length;s+=e){const r=t.slice(s,s+e);this.#_[Math.round(s/e)].attributes.set(i,r)}}createVBOs(){const t=new Map,e=[];for(let e of this.#_)for(let i of e.attributes.keys())t.get(i)||t.set(i,[]),t.get(i).push(...e.attributes.get(i));for(let t of this.#p)e.push(t.vertex.id);return{attributes:t,indexes:e,count:this.#_.length}}}class u extends l{#x;#w=-1;#E;#h=!1;set border(t){this.#E=t}constructor(t,e,i,s){super(t,e,i,t.TRIANGLES),this.#x=new f(s)}addAttribute(t,e,i=4){if(!(e instanceof Array))throw new Error("The info parameter needs to be a Array.");if(e.forEach((t=>{if("number"!=typeof t)throw new Error("The info array need to be numeric.")})),-1===this._gl.getAttribLocation(this._program,t))throw new Error(`the attribute ${t} doesn't exists in the shader code.`);this.#x.setAttribute(e,i,t),this.#h=!1}#c(){const t=this.#x.createVBOs(),e=Array.from(t.attributes.entries()).map((e=>({loc:this._gl.getAttribLocation(this._program,e[0]),buffer:h.createBuffer(this._gl,this._gl.ARRAY_BUFFER,new Float32Array(e[1])),dimension:Math.round(e[1].length/t.count)})));this._vaoLoc=h.createVAO(this._gl,...e),this.#w=h.createBuffer(this._gl,this._gl.ELEMENT_ARRAY_BUFFER,new Uint32Array(t.indexes)),this._count=t.indexes.length,this.#h=!0}draw(t){this.#h||this.#c(),this.useDepthTest&&(this._gl.enable(this._gl.DEPTH_TEST),this._gl.depthFunc(this._gl.LESS)),this._gl.frontFace(this._gl.CCW),this._gl.enable(this._gl.CULL_FACE),this._gl.cullFace(this._gl.BACK),this._gl.bindVertexArray(this._vaoLoc),this._gl.useProgram(this._program),this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER,this.#w);const e=this._gl.getUniformLocation(this._program,"model"),s=this._gl.getUniformLocation(this._program,"modelView"),r=this._gl.getUniformLocation(this._program,"mvp");if(e)this._gl.uniformMatrix4fv(e,!1,this.modelMatrix);else if(s){const s=i();n(s,t.viewMatrix,this.modelMatrix),this._gl.uniformMatrix4fv(e,!1,s)}else if(r){const s=i();n(s,t.viewProjection,this.modelMatrix),this._gl.uniformMatrix4fv(e,!1,s)}this._gl.drawElements(this._primitive,this._count,this._gl.UNSIGNED_INT,0),this._gl.disable(this._gl.CULL_FACE),this.useDepthTest&&this._gl.disable(this._gl.DEPTH_TEST)}pointCollision(t,e,i){return!!this.#E&&this.#E.pointCollision(t,e,i,this)}get drawBorder(){return this.#E.draw()}static async loadMeshFromObj(t,e,i,s,r){const o=await fetch(t),n=await o.text(),a=new Map,h=n.split("\n"),l=[],m=[],g=[],d=[];let f=0;for(let t of h)if(t.startsWith("vn")){const e=t.replace("vn ","").split(" ").map(Number.parseFloat);m.push(...e,1);const i=Math.sqrt(p(e,e));if(Math.abs(p(e,[0,0,1])/i)<.5){const t=e.join(",");a.get(t)||a.set(t,f)}f++}else if(t.startsWith("vt")){const e=t.replace("vt ","").split(" ").map(Number.parseFloat);g.push(...e)}else if(t.startsWith("v")){const e=t.replace("v ","").split(" ").map(Number.parseFloat);l.push(...e,1)}else if(t.startsWith("f")){const e=t.replace("f ","").split(" ").map((t=>{const e=t.indexOf("/"),i=t.slice(0,e);return Number.parseInt(i)-1}));d.push(...e)}const v=new _(a,l,e),x=new u(e,i,s,d);if(x.addAttribute("position",l),x.addAttribute("normal",m),x.useDepthTest=!0,0!==g.length){if(!r)throw new Error("This mesh need to a texture path");x.addAttribute("texCoord",g,3);const t=await c.loadImage(r);x.createTex(t,"uTexture")}return x.border=v,x}}const p=(t,e)=>t.reduce(((t,i,s)=>t+i*e[s]),0);class _{#M;#b;#T;#A;#C;constructor(t,e){this.#M=t,this.#b=e;let i=1/0,s=-1/0;for(let t=0;t<this.#b.length;t+=4)this.#b[t+2]<i&&(i=this.#b[t+2]),this.#b[t+2]>s&&(s=this.#b[t+2]);this.#A=i,this.#C=s}pointCollision(t,e,i,s){return this.#P(t,e,this.#A,i,s)||this.#P(t,e,this.#C,i,s)}#P(t,e,r,a,h){const l=[t,e,r,1],c=i();s(c,h.modelMatrix),a&&n(c,a.viewMatrix,c);const m=i();o(m,c);let g=_.multiplyMatWithVec(m,l);console.log(l,g);let d=this.#y(g);return d&&(this.#T=l),d}#y(t){let e,i,s=0;console.log("collide"),console.log(t);for(let r of this.#M.entries()){const o=4*r[1],n=[this.#b[o],this.#b[o+1],this.#b[o+2]];if(!e){e=n,i=n;continue}const a=[n[0],i[0]];a.sort();const[h,l]=a,c=[n[1],i[1]];c.sort();const[m,g]=c,d=(m-g)/(h-l),f=m-h*d;t[1]<=g&&t[1]>=m&&t[0]<=(t[1]-f)/d&&(s++,console.log(i,n,(t[1]-f)/d)),i=n}const r=Math.max(e[0],i[0]),o=[e[1],i[1]];o.sort();const[n,a]=o;return t[1]<=a&&t[1]>=n&&t[0]<=r&&s++,s%2==1}draw(){const t=document.createElement("canvas");t.width=1e3,t.height=1e3,t.style.backgroundColor="rgb(100, 0, 0)";const e=t.getContext("2d");let i;e.beginPath();for(let t of this.#M.entries()){const s=4*t[1],r=[this.#b[s],this.#b[s+1],this.#b[s+2]];i?e.lineTo(500*r[0]+250,500*(1-r[1])):(i=r,e.moveTo(500*r[0]+250,500*(1-r[1])))}return e.lineTo(500*i[0]+250,500*(1-i[1])),e.stroke(),this.#T&&e.fillRect(500*this.#T[0]+250,500*(1-this.#T[1]),5,5),t}static multiplyMatWithVec(t,e){const i=new Array(e.length).fill(0);if(Math.round(e.length**2)===t.length){for(let s=0;s<t.length;s+=4)for(let r=0;r<e.length;r++)i[r]+=t[s+r]*e[r/4];return console.log(i),i}}}const v="#version 300 es\n    precision highp float;\n\n    uniform mat4 model;\n    uniform mat4 view;\n    uniform mat4 projection;\n    uniform vec4 color;\n\n    in vec4 position;\n    in vec4 normal;\n\n    out vec4 fPos;\n    out vec4 fColor;\n    out vec4 fNormal;\n\n    void main() {\n        gl_Position = (projection*view*model) * position;\n        gl_Position /= gl_Position.w;\n        fColor = color;\n        fPos = position;\n        fNormal = normal;\n    }\n",x="#version 300 es\n    precision highp float;\n    \n    uniform mat4 model;\n    uniform mat4 view;\n    uniform mat4 projection;\n\n    uniform vec3 amb_c;\n    uniform vec3 dif_c;\n    uniform vec3 esp_c;\n    uniform vec3 pos;\n    uniform float amb_k;\n    uniform float dif_k;\n    uniform float esp_k;\n    uniform float esp_p;\n\n    in vec4 fColor;\n    in vec4 normal;\n    in vec4 fPos;\n    in vec4 fNormal;\n\n    out vec4 color;\n\n    void main() {\n        mat4 modelView = view*model;\n\n        vec3 lightPos = (view * vec4(pos, 1.0)).xyz;\n        vec3 pos = -(modelView * fPos).xyz;\n\n        vec3 vNormal = normalize(inverse(transpose(modelView)) * fNormal).xyz;\n        vec3 vDistance = normalize(pos - lightPos);\n\n        vec3 normalPos = normalize(pos);\n\n        vec3 halfVector= normalize(vDistance + normalPos);\n\n        vec3 amb = amb_k * amb_c;\n\n        vec3 diff = max(dot(vNormal, vDistance), 0.0) * dif_k * dif_c;\n\n        vec3 spec = max(pow(dot(vNormal, halfVector), esp_p), 0.0) * esp_c * esp_k;\n\n        vec3 color3 = vec3(fColor);\n        \n        color3 = 0.5*color3 + 0.5*(diff + amb + spec);\n\n        color = vec4(color3, 1.0);\n    }\n";class w extends c{#S;async init(t,e=1e3){const i=document.createElement("canvas"),s=i.toDataURL("image/png");[i.width,i.height]=[e,e],await super.init(t,s),this.#S=i}async update(t=(()=>{}),e){t(this.#S.getContext("2d"));const i=this.#S.toDataURL("image/png"),s=await c.loadImage(i);l.changeTex(e,this._tex,s)}}class E{#L=i();#U=i();#R=i();camPosition=[0,0,1];lookDirection=[0,0,0];upDirection=[0,1,0];left=-4;right=4;bottom=-4;top=4;near=1;far=9;fovy=Math.PI/2;aspect;constructor(t){this.aspect=t.width/t.height}#F="perspective";set projectionType(t){if("orthogonal"!==t&&"perspective"!==t)throw new Error("Invalid type of projection.");this.#F=t}get viewMatrix(){return this.#V(),this.#L}get projMatrix(){return this.#j(),this.#U}#V(){r(this.#L),function(e,i,s,o){var n,a,h,l,c,m,g,d,f,u,p=i[0],_=i[1],v=i[2],x=o[0],w=o[1],E=o[2],M=s[0],b=s[1],T=s[2];Math.abs(p-M)<t&&Math.abs(_-b)<t&&Math.abs(v-T)<t?r(e):(g=p-M,d=_-b,f=v-T,n=w*(f*=u=1/Math.hypot(g,d,f))-E*(d*=u),a=E*(g*=u)-x*f,h=x*d-w*g,(u=Math.hypot(n,a,h))?(n*=u=1/u,a*=u,h*=u):(n=0,a=0,h=0),l=d*h-f*a,c=f*n-g*h,m=g*a-d*n,(u=Math.hypot(l,c,m))?(l*=u=1/u,c*=u,m*=u):(l=0,c=0,m=0),e[0]=n,e[1]=l,e[2]=g,e[3]=0,e[4]=a,e[5]=c,e[6]=d,e[7]=0,e[8]=h,e[9]=m,e[10]=f,e[11]=0,e[12]=-(n*p+a*_+h*v),e[13]=-(l*p+c*_+m*v),e[14]=-(g*p+d*_+f*v),e[15]=1)}(this.#L,this.camPosition,this.lookDirection,this.upDirection)}#j(){r(this.#U),"perspective"===this.#F?function(t,e,i,s,r){var o,n=1/Math.tan(e/2);t[0]=n/i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=r&&r!==1/0?(o=1/(s-r),t[10]=(r+s)*o,t[14]=2*r*s*o):(t[10]=-1,t[14]=-2*s)}(this.#U,this.fovy,this.aspect,this.near,this.far):function(t,e,i,s,r,o,n){var a=1/(e-i),h=1/(s-r),l=1/(o-n);t[0]=-2*a,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*h,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*l,t[11]=0,t[12]=(e+i)*a,t[13]=(r+s)*h,t[14]=(n+o)*l,t[15]=1}(this.#U,this.left*this.aspect,this.right*this.aspect,this.bottom,this.top,this.left,this.right)}get viewProjection(){return this.#V(),this.#j(),r(this.#R),n(this.#R,this.#U,this.#L),this.#R}}class M{ambColor=[0,0,0];ambK=3;difColor=[.3,.3,.3];difK=4;espColor=[1,1,1];espK=3;espExp=20;pos;constructor(t){this.pos=t}createUniforms(t){t.setUniformValue("amb_c",this.ambColor,"3fv"),t.setUniformValue("amb_k",this.ambK,"1f"),t.setUniformValue("dif_c",this.difColor,"3fv"),t.setUniformValue("dif_k",this.difK,"1f"),t.setUniformValue("esp_c",this.espColor,"3fv"),t.setUniformValue("esp_k",this.espK,"1f"),t.setUniformValue("esp_p",this.espExp,"1f")}}class b{#D=[];#I;#B;get camera(){return this.#B}constructor(t,e=[0,0,0,1]){if(t instanceof WebGL2RenderingContext){if(t.viewport(0,0,t.canvas.width,t.canvas.height),!e||!e.length||4!==e.length)throw new Error("The clear color need to be a array with 4 floats");t.clearColor(0,0,0,1),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),this.gl=t}}createCamera(t){this.#B=new E(t)}createLight(t){this.#I=new M(t)}appendElement(...t){t.forEach((t=>{if(!t.draw)throw new Error("Element need to have a draw function");this.#D.push(t),this.#I&&t instanceof l&&this.#I.createUniforms(t)}))}draw(){for(let t of this.#D)t.draw(this.#B)}}class T{#k;#O;#N=!1;static async build(t){const e=new T;return await e.init(t),e}async init(t){this.gl=t.getContext("webgl2"),await this.#G(),await this.#X()}async#G(){this.#k=new b(this.gl);const t=new c;await t.init(this.gl,"./assets/menu/fundo.jpg");const e=new c;await e.init(this.gl,"./assets/menu/logo_war.png");const i=new c;await i.init(this.gl,"./assets/menu/play_button.png");const s=new c;await s.init(this.gl,"./assets/buttons/Group_17settings_button.png");const r=new c;await r.init(this.gl,"./assets/menu/max_button.png"),t.scaleY=1.85,e.scale=[.35,.56],i.scale=[.15,.26],s.scale=[.05,.08],r.scale=[.05,.08],e.positionY=.25,i.positionY=-.55,s.positionX=.9,s.positionY=.8,r.positionX=.9,r.positionY=.57,this.#k.appendElement(t,e,i,s,r),this.gl.canvas.addEventListener("click",(t=>{const e=T.mapClickInCanvas(t.clientX,t.clientY,this.gl.canvas);i.pointCollision(...e)&&(this.#N=!0)}))}async#X(){const t=new c;await t.init(this.gl,"./assets/mapa.jpg"),t.scale=[2.7,2.7];const e=await u.loadMeshFromObj("./assets/meshes/brasil-rotacionado.obj",this.gl,v,x);e.scale=[1.2,1.2,1],e.position=[-0,-0,.3],e.rotation[1]=-.2;const i=await u.loadMeshFromObj("./assets/meshes/argentina.obj",this.gl,v,x);i.scale=[1.6,1.6,1.5],i.position=[-.21,-.35,.3],this.#O=new b(this.gl),this.#O.createCamera(A),this.#O.camera.camPosition[2]=1.8,this.#O.camera.camPosition[1]=-.3,this.#O.createLight([1,0,.3]);const s=new w;await s.init(this.gl),await s.update((t=>{t instanceof CanvasRenderingContext2D&&(t.fillStyle="white",t.ellipse(500,500,400,500,0,0,2*Math.PI),t.lineWidth=100,t.stroke(),t.font="600px Arial",t.fillText("1",320,600))}),this.gl),s.scale=[.1,.1],s.positionY=.2,this.#O.appendElement(t,e,i,s),e.setUniformValue("view",this.#O.camera.viewMatrix,"Matrix4fv"),e.setUniformValue("projection",this.#O.camera.projMatrix,"Matrix4fv"),e.setUniformValue("color",[1,0,0,1],"4fv"),i.setUniformValue("view",this.#O.camera.viewMatrix,"Matrix4fv"),i.setUniformValue("projection",this.#O.camera.projMatrix,"Matrix4fv"),i.setUniformValue("color",[0,0,1,1],"4fv"),this.gl.canvas.addEventListener("click",(t=>{if(!this.#N)return;const s=T.mapClickInCanvas(t.clientX,t.clientY,this.gl.canvas);e.pointCollision(...s)&&alert("foi"),i.pointCollision(...s)&&alert("argentina")}))}draw(){this.#N?this.#O.draw():this.#k.draw()}run(){const t=()=>{this.draw(),requestAnimationFrame(t)};t()}static mapClickInCanvas(t,e,i){const s=[t-i.offsetLeft-i.width/2,i.height/2-(e-i.offsetTop)];return[2*s[0]/i.width,2*s[1]/i.height]}}const A=document.querySelector("#game-screen");T.build(A).then((t=>{t.run()}))})();
//# sourceMappingURL=main.bundle.js.map